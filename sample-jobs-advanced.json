{
  "format_version": "1.0",
  "export_timestamp": "2025-09-08T20:15:00.000000+00:00",
  "export_metadata": {
    "exported_by": "sample",
    "opsconductor_version": "2.0.0",
    "description": "Advanced sample jobs with conditional logic",
    "job_count": 1
  },
  "jobs": [
    {
      "name": "Conditional Deployment",
      "description": "Advanced deployment with health checks and rollback",
      "version": 1,
      "metadata": {},
      "parameters": {
        "app_version": {
          "type": "string",
          "default": "v1.0.0",
          "description": "Application version to deploy"
        },
        "environment": {
          "type": "string",
          "default": "staging",
          "description": "Target environment"
        },
        "health_check_url": {
          "type": "string",
          "default": "http://localhost:8080/health",
          "description": "Health check endpoint"
        }
      },
      "nodes": [
        {
          "id": "start_1",
          "type": "flow.start",
          "position": { "x": 200, "y": 100 },
          "data": {
            "name": "Start Deployment",
            "trigger_type": "manual"
          }
        },
        {
          "id": "deploy_app",
          "type": "action.command",
          "position": { "x": 200, "y": 200 },
          "data": {
            "name": "Deploy Application",
            "command": "docker run -d --name app_{{environment}} myapp:{{app_version}}",
            "shell": "bash",
            "target": "app-server",
            "timeout": 120,
            "connection_type": "ssh",
            "description": "Deploy application container"
          }
        },
        {
          "id": "wait_startup",
          "type": "flow.delay",
          "position": { "x": 200, "y": 300 },
          "data": {
            "name": "Wait for Startup",
            "delay_seconds": 30,
            "description": "Wait for application to start"
          }
        },
        {
          "id": "health_check",
          "type": "action.http",
          "position": { "x": 200, "y": 400 },
          "data": {
            "name": "Health Check",
            "url": "{{health_check_url}}",
            "method": "GET",
            "timeout": 30,
            "expected_status": 200,
            "description": "Check application health"
          }
        },
        {
          "id": "check_health_result",
          "type": "logic.if",
          "position": { "x": 200, "y": 500 },
          "data": {
            "name": "Check Health Result",
            "condition": "previous_step.status == 'success'",
            "description": "Evaluate health check result"
          }
        },
        {
          "id": "notify_success",
          "type": "action.notification",
          "position": { "x": 100, "y": 600 },
          "data": {
            "name": "Notify Success",
            "notification_type": "slack",
            "message": "Deployment successful for {{app_version}} in {{environment}}",
            "channel": "#deployments",
            "description": "Send success notification"
          }
        },
        {
          "id": "rollback",
          "type": "action.command",
          "position": { "x": 300, "y": 600 },
          "data": {
            "name": "Rollback",
            "command": "docker stop app_{{environment}} && docker rm app_{{environment}}",
            "shell": "bash",
            "target": "app-server",
            "timeout": 60,
            "connection_type": "ssh",
            "description": "Rollback failed deployment"
          }
        },
        {
          "id": "notify_failure",
          "type": "action.notification",
          "position": { "x": 300, "y": 700 },
          "data": {
            "name": "Notify Failure",
            "notification_type": "slack",
            "message": "Deployment failed for {{app_version}} in {{environment}} - rolled back",
            "channel": "#deployments",
            "description": "Send failure notification"
          }
        },
        {
          "id": "end_success",
          "type": "flow.end",
          "position": { "x": 100, "y": 700 },
          "data": {
            "name": "End Success",
            "status": "success"
          }
        },
        {
          "id": "end_failure",
          "type": "flow.end",
          "position": { "x": 300, "y": 800 },
          "data": {
            "name": "End Failure",
            "status": "failure"
          }
        }
      ],
      "edges": [
        {
          "id": "e1",
          "source": "start_1",
          "target": "deploy_app",
          "condition": "always"
        },
        {
          "id": "e2",
          "source": "deploy_app",
          "target": "wait_startup",
          "condition": "always"
        },
        {
          "id": "e3",
          "source": "wait_startup",
          "target": "health_check",
          "condition": "always"
        },
        {
          "id": "e4",
          "source": "health_check",
          "target": "check_health_result",
          "condition": "always"
        },
        {
          "id": "e5",
          "source": "check_health_result",
          "target": "notify_success",
          "condition": "true"
        },
        {
          "id": "e6",
          "source": "check_health_result",
          "target": "rollback",
          "condition": "false"
        },
        {
          "id": "e7",
          "source": "notify_success",
          "target": "end_success",
          "condition": "always"
        },
        {
          "id": "e8",
          "source": "rollback",
          "target": "notify_failure",
          "condition": "always"
        },
        {
          "id": "e9",
          "source": "notify_failure",
          "target": "end_failure",
          "condition": "always"
        }
      ]
    }
  ]
}