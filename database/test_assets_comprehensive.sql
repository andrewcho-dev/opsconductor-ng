-- Comprehensive Test Assets with All Fields Populated
-- This script creates 10 diverse assets for testing purposes

-- Asset 1: Production Database Server (PostgreSQL)
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    database_type, database_name,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'prod-db-primary-01',
    'db-prod-01.company.local',
    '10.20.30.100',
    'Primary production PostgreSQL database server for customer data',
    '["database", "postgresql", "production", "critical", "customer-data"]'::jsonb,
    'server',
    'Dell',
    'PowerEdge R740',
    'SN-DB-2024-001',
    'linux',
    'Ubuntu 22.04 LTS',
    '123 Data Center Drive, Silicon Valley, CA 94025',
    'DC-West-01',
    'Building A',
    'Server Room 3',
    'Rack 12, U15-U17',
    'Row 5, Rack 12',
    '37.3861,-122.0839',
    'active',
    'production',
    'critical',
    'Database Team',
    'db-support@company.com',
    'DELL-ENT-2024-DB-001',
    'postgresql',
    5432,
    true,
    'password',
    'postgres_admin',
    NULL,
    'postgresql',
    'customer_production',
    'ssh',
    22,
    NULL,
    'root',
    'Primary production database. Requires change approval for any modifications. Backup schedule: Every 6 hours. RPO: 15 minutes. RTO: 1 hour.',
    true,
    'healthy'
);

-- Asset 2: Development Web Server (Apache)
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'dev-web-apache-01',
    'web-dev-01.company.local',
    '10.20.30.101',
    'Development web server running Apache for frontend testing',
    '["webserver", "apache", "development", "frontend", "testing"]'::jsonb,
    'server',
    'HP',
    'ProLiant DL380 Gen10',
    'SN-WEB-2024-002',
    'linux',
    'CentOS 8.5',
    '123 Data Center Drive, Silicon Valley, CA 94025',
    'DC-West-01',
    'Building B',
    'Server Room 1',
    'Rack 5, U10-U12',
    'Row 2, Rack 5',
    '37.3861,-122.0839',
    'active',
    'development',
    'low',
    'Web Development Team',
    'web-dev@company.com',
    'HP-STD-2023-WEB-045',
    'http',
    80,
    false,
    'password',
    'webadmin',
    NULL,
    'ssh',
    22,
    NULL,
    'devops',
    'Development web server. Can be rebooted without approval. Used for feature branch testing.',
    true,
    'healthy'
);

-- Asset 3: Windows Domain Controller
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'prod-dc-primary-01',
    'dc-prod-01.company.local',
    '10.20.30.102',
    'Primary Windows Active Directory Domain Controller',
    '["windows", "domain-controller", "active-directory", "production", "critical"]'::jsonb,
    'server',
    'Dell',
    'PowerEdge R640',
    'SN-DC-2024-003',
    'windows',
    'Windows Server 2022 Standard',
    '456 Enterprise Blvd, New York, NY 10001',
    'DC-East-01',
    'Building C',
    'Secure Room 1',
    'Rack 3, U5-U7',
    'Row 1, Rack 3',
    '40.7128,-74.0060',
    'active',
    'production',
    'critical',
    'Infrastructure Team',
    'infra-support@company.com',
    'DELL-ENT-2024-DC-002',
    'winrm',
    5985,
    false,
    'password',
    'Administrator',
    'COMPANY',
    'rdp',
    3389,
    NULL,
    'Administrator',
    'Primary domain controller. Handles authentication for 5000+ users. Requires 24/7 availability.',
    true,
    'healthy'
);

-- Asset 4: Staging MySQL Database
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    database_type, database_name,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'staging-db-mysql-01',
    'mysql-staging-01.company.local',
    '10.20.30.103',
    'Staging MySQL database for pre-production testing',
    '["database", "mysql", "staging", "testing", "analytics"]'::jsonb,
    'server',
    'Lenovo',
    'ThinkSystem SR650',
    'SN-MYSQL-2024-004',
    'linux',
    'Red Hat Enterprise Linux 8.6',
    '123 Data Center Drive, Silicon Valley, CA 94025',
    'DC-West-01',
    'Building A',
    'Server Room 2',
    'Rack 8, U20-U22',
    'Row 3, Rack 8',
    '37.3861,-122.0839',
    'active',
    'staging',
    'medium',
    'Database Team',
    'db-support@company.com',
    'LENOVO-STD-2024-DB-003',
    'mysql',
    3306,
    true,
    'password',
    'mysql_admin',
    NULL,
    'mysql',
    'analytics_staging',
    'ssh',
    22,
    NULL,
    'sysadmin',
    'Staging database refreshed weekly from production. Used for QA testing and performance validation.',
    true,
    'healthy'
);

-- Asset 5: Production API Gateway (NGINX)
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'prod-api-gateway-01',
    'api-gw-prod-01.company.local',
    '10.20.30.104',
    'Production API Gateway handling external traffic with NGINX',
    '["api-gateway", "nginx", "production", "critical", "public-facing"]'::jsonb,
    'server',
    'Cisco',
    'UCS C240 M5',
    'SN-API-2024-005',
    'linux',
    'Ubuntu 22.04 LTS',
    '456 Enterprise Blvd, New York, NY 10001',
    'DC-East-01',
    'Building D',
    'DMZ Room',
    'Rack 1, U1-U2',
    'Row 1, Rack 1',
    '40.7128,-74.0060',
    'active',
    'production',
    'critical',
    'Platform Team',
    'platform-support@company.com',
    'CISCO-ENT-2024-API-001',
    'https',
    443,
    true,
    'ssh_key',
    'nginx_admin',
    NULL,
    'ssh',
    22,
    NULL,
    'devops',
    'Handles 10K+ requests/sec. Load balanced with api-gw-prod-02. SSL termination point.',
    true,
    'healthy'
);

-- Asset 6: Development MongoDB Cluster Node
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    database_type, database_name,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'dev-mongo-node-01',
    'mongo-dev-01.company.local',
    '10.20.30.105',
    'Development MongoDB cluster node for document storage testing',
    '["database", "mongodb", "development", "nosql", "document-store"]'::jsonb,
    'server',
    'Supermicro',
    'SuperServer 6029P-TRT',
    'SN-MONGO-2024-006',
    'linux',
    'Debian 11',
    '123 Data Center Drive, Silicon Valley, CA 94025',
    'DC-West-01',
    'Building B',
    'Server Room 1',
    'Rack 7, U15-U17',
    'Row 2, Rack 7',
    '37.3861,-122.0839',
    'active',
    'development',
    'low',
    'NoSQL Team',
    'nosql-dev@company.com',
    'SUPERMICRO-STD-2024-DB-007',
    'mongodb',
    27017,
    true,
    'password',
    'mongo_admin',
    NULL,
    'mongodb',
    'dev_documents',
    'ssh',
    22,
    NULL,
    'developer',
    'Part of 3-node replica set. Used for microservices development and testing.',
    true,
    'healthy'
);

-- Asset 7: Production Redis Cache Server
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    database_type, database_name,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'prod-cache-redis-01',
    'redis-prod-01.company.local',
    '10.20.30.106',
    'Production Redis cache server for session management and caching',
    '["cache", "redis", "production", "high-performance", "in-memory"]'::jsonb,
    'server',
    'Dell',
    'PowerEdge R740xd',
    'SN-REDIS-2024-007',
    'linux',
    'Ubuntu 22.04 LTS',
    '456 Enterprise Blvd, New York, NY 10001',
    'DC-East-01',
    'Building C',
    'Server Room 2',
    'Rack 10, U8-U10',
    'Row 4, Rack 10',
    '40.7128,-74.0060',
    'active',
    'production',
    'high',
    'Platform Team',
    'platform-support@company.com',
    'DELL-ENT-2024-CACHE-001',
    'redis',
    6379,
    true,
    'password',
    'redis_admin',
    NULL,
    'redis',
    'session_cache',
    'ssh',
    22,
    NULL,
    'sysadmin',
    'Handles session data for web applications. 128GB RAM. Persistence enabled with AOF.',
    true,
    'healthy'
);

-- Asset 8: Staging Windows Application Server
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'staging-app-win-01',
    'app-staging-01.company.local',
    '10.20.30.107',
    'Staging Windows application server running .NET applications',
    '["application", "windows", "staging", "dotnet", "iis"]'::jsonb,
    'server',
    'HP',
    'ProLiant DL360 Gen10',
    'SN-APP-2024-008',
    'windows',
    'Windows Server 2019 Standard',
    '123 Data Center Drive, Silicon Valley, CA 94025',
    'DC-West-01',
    'Building A',
    'Server Room 3',
    'Rack 15, U12-U14',
    'Row 6, Rack 15',
    '37.3861,-122.0839',
    'active',
    'staging',
    'medium',
    'Application Team',
    'app-support@company.com',
    'HP-STD-2024-APP-009',
    'winrm',
    5985,
    false,
    'password',
    'AppAdmin',
    'COMPANY',
    'rdp',
    3389,
    NULL,
    'AppAdmin',
    'Runs IIS 10 with .NET Framework 4.8 and .NET Core 6.0. Used for pre-production testing.',
    true,
    'healthy'
);

-- Asset 9: Production Elasticsearch Cluster Node
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    database_type, database_name,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'prod-search-elastic-01',
    'elastic-prod-01.company.local',
    '10.20.30.108',
    'Production Elasticsearch node for search and analytics',
    '["search", "elasticsearch", "production", "analytics", "logging"]'::jsonb,
    'server',
    'Dell',
    'PowerEdge R750',
    'SN-ELASTIC-2024-009',
    'linux',
    'Ubuntu 22.04 LTS',
    '456 Enterprise Blvd, New York, NY 10001',
    'DC-East-01',
    'Building D',
    'Server Room 3',
    'Rack 20, U5-U8',
    'Row 8, Rack 20',
    '40.7128,-74.0060',
    'active',
    'production',
    'high',
    'Search Team',
    'search-support@company.com',
    'DELL-ENT-2024-SEARCH-002',
    'elasticsearch',
    9200,
    true,
    'password',
    'elastic_admin',
    NULL,
    'elasticsearch',
    'product_search',
    'ssh',
    22,
    NULL,
    'elastic',
    'Master-eligible node in 5-node cluster. Handles product search queries. 256GB RAM, 4TB NVMe storage.',
    true,
    'healthy'
);

-- Asset 10: Development Kubernetes Master Node
INSERT INTO assets.assets (
    name, hostname, ip_address, description, tags,
    device_type, hardware_make, hardware_model, serial_number,
    os_type, os_version,
    physical_address, data_center, building, room, rack_position, rack_location, gps_coordinates,
    status, environment, criticality, owner, support_contact, contract_number,
    service_type, port, is_secure,
    credential_type, username, domain,
    secondary_service_type, secondary_port, ftp_type, secondary_username,
    notes, is_active, connection_status
) VALUES (
    'dev-k8s-master-01',
    'k8s-dev-master-01.company.local',
    '10.20.30.109',
    'Development Kubernetes master node for container orchestration',
    '["kubernetes", "container", "development", "orchestration", "master"]'::jsonb,
    'server',
    'Lenovo',
    'ThinkSystem SR630',
    'SN-K8S-2024-010',
    'linux',
    'Ubuntu 22.04 LTS',
    '123 Data Center Drive, Silicon Valley, CA 94025',
    'DC-West-01',
    'Building B',
    'Server Room 2',
    'Rack 18, U1-U2',
    'Row 7, Rack 18',
    '37.3861,-122.0839',
    'active',
    'development',
    'medium',
    'DevOps Team',
    'devops@company.com',
    'LENOVO-STD-2024-K8S-011',
    'https',
    6443,
    true,
    'ssh_key',
    'k8s_admin',
    NULL,
    'ssh',
    22,
    NULL,
    'devops',
    'Kubernetes v1.28.3. Controls 10 worker nodes. Used for microservices development and CI/CD testing.',
    true,
    'healthy'
);

-- Verify the inserts
SELECT 
    id, 
    name, 
    hostname, 
    ip_address, 
    os_type, 
    environment, 
    data_center,
    device_type,
    criticality
FROM assets.assets 
WHERE name IN (
    'prod-db-primary-01',
    'dev-web-apache-01',
    'prod-dc-primary-01',
    'staging-db-mysql-01',
    'prod-api-gateway-01',
    'dev-mongo-node-01',
    'prod-cache-redis-01',
    'staging-app-win-01',
    'prod-search-elastic-01',
    'dev-k8s-master-01'
)
ORDER BY id;