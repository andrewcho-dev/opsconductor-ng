{"ast":null,"code":"var _jsxFileName = \"/app/src/components/StepConfigModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport JobTargetSelector from './JobTargetSelector';\nimport TargetFieldSelector from './TargetFieldSelector';\nimport ConnectionTypeSelector from './ConnectionTypeSelector';\nimport { targetApi } from '../services/api';\nimport { X, Info, ChevronDown, ChevronRight, Settings, User } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StepConfigModal = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  isOpen,\n  onClose,\n  onSave,\n  stepNode\n}) => {\n  _s();\n  const [config, setConfig] = useState({});\n  const [targets, setTargets] = useState([]);\n  const [showConnectionOverride, setShowConnectionOverride] = useState(false);\n  const [showCredentialOverride, setShowCredentialOverride] = useState(false);\n  useEffect(() => {\n    if (stepNode) {\n      const initialConfig = {\n        ...stepNode.config\n      };\n      // Ensure target_names is always a string\n      if (initialConfig.target_names === undefined || initialConfig.target_names === null) {\n        initialConfig.target_names = '';\n      }\n      // Ensure selection_mode has a default value\n      if (!initialConfig.selection_mode) {\n        initialConfig.selection_mode = 'specific';\n      }\n      setConfig(initialConfig);\n    }\n  }, [stepNode === null || stepNode === void 0 ? void 0 : stepNode.id]);\n  useEffect(() => {\n    fetchTargets();\n  }, []);\n  const fetchTargets = async () => {\n    try {\n      const response = await targetApi.list(0, 1000);\n      setTargets(response.targets || []);\n    } catch (err) {\n      console.error('Failed to fetch targets:', err);\n    }\n  };\n  const handleSave = () => {\n    onSave(config);\n    onClose();\n  };\n  const updateConfig = useCallback((key, value) => {\n    setConfig(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  }, []);\n  const handleTargetChange = useCallback(targets => {\n    // Store multiple targets\n    updateConfig('targets', targets);\n    // Also set the first target as primary for backward compatibility\n    if (targets.length > 0) {\n      updateConfig('target', targets[0]);\n    } else {\n      updateConfig('target', '');\n    }\n  }, [updateConfig]);\n  const handleTargetSelection = targetNames => {\n    const targetName = targetNames[0];\n    if (!targetName) return;\n\n    // Find the selected target\n    const selectedTarget = targets.find(t => t.name === targetName);\n    if (!selectedTarget) return;\n\n    // Auto-populate fields based on target configuration\n    const updates = {\n      target: targetName,\n      target_host: selectedTarget.hostname || selectedTarget.ip_address || targetName\n    };\n\n    // Auto-populate connection method based on target OS and available methods\n    if (selectedTarget.os_type) {\n      switch (selectedTarget.os_type.toLowerCase()) {\n        case 'windows':\n          updates.connection_method = 'winrm';\n          updates.connection_type = 'winrm'; // Keep both for compatibility\n          break;\n        case 'linux':\n        case 'unix':\n          updates.connection_method = 'ssh';\n          updates.connection_type = 'ssh'; // Keep both for compatibility\n          break;\n        default:\n          updates.connection_method = 'ssh';\n          updates.connection_type = 'ssh';\n        // Keep both for compatibility\n      }\n    }\n\n    // Auto-populate port if available\n    if (selectedTarget.port) {\n      updates.port = selectedTarget.port;\n    }\n\n    // Auto-populate credentials if target has associated credentials\n    if (selectedTarget.credential_ref) {\n      // You could fetch credential details here and populate username\n      updates.username = `{{credential:${selectedTarget.credential_ref}:username}}`;\n      updates.password = `{{credential:${selectedTarget.credential_ref}:password}}`;\n    }\n\n    // Apply all updates at once\n    setConfig(prev => ({\n      ...prev,\n      ...updates\n    }));\n  };\n\n  // Compact Target Selector Component\n  const CompactTargetSelector = ({\n    selectedTargets,\n    onTargetChange,\n    availableTargets\n  }) => {\n    const handleTargetToggle = targetName => {\n      const isSelected = selectedTargets.includes(targetName);\n      let newSelection;\n      if (isSelected) {\n        // Remove target\n        newSelection = selectedTargets.filter(t => t !== targetName);\n      } else {\n        // Add target\n        newSelection = [...selectedTargets, targetName];\n      }\n      onTargetChange(newSelection);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '120px',\n        border: '1px solid #ddd',\n        borderRadius: '4px',\n        backgroundColor: 'white',\n        overflowY: 'auto',\n        padding: '4px'\n      },\n      children: availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '2px 4px',\n          fontSize: '12px',\n          cursor: 'pointer',\n          backgroundColor: selectedTargets.includes(target.name) ? '#e3f2fd' : 'transparent',\n          borderRadius: '2px',\n          marginBottom: '1px'\n        },\n        onClick: () => handleTargetToggle(target.name),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedTargets.includes(target.name),\n          onChange: () => {} // Handled by div onClick\n          ,\n          style: {\n            marginRight: '6px',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: [target.name, \" (\", target.hostname || target.ip_address, \") - \", target.os_type || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, target.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Collapsible Section Component\n  const CollapsibleSection = ({\n    title,\n    icon,\n    isOpen,\n    onToggle,\n    children\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onToggle,\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '6px',\n          width: '100%',\n          padding: '6px 8px',\n          backgroundColor: '#f8f9fa',\n          border: '1px solid #e9ecef',\n          borderRadius: '4px',\n          fontSize: '12px',\n          color: '#495057',\n          cursor: 'pointer',\n          textAlign: 'left'\n        },\n        children: [isOpen ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 49\n        }, this), icon, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px',\n          border: '1px solid #e9ecef',\n          borderTop: 'none',\n          borderRadius: '0 0 4px 4px',\n          backgroundColor: '#fafbfc'\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to determine field type and render appropriate selector\n  const renderFieldInput = (key, value) => {\n    const lowerKey = key.toLowerCase();\n\n    // Target-related fields\n    if (lowerKey.includes('target') && (lowerKey.includes('host') || lowerKey.includes('hostname') || lowerKey.includes('ip') || lowerKey.includes('address'))) {\n      return /*#__PURE__*/_jsxDEV(TargetFieldSelector, {\n        value: String(value),\n        onChange: newValue => updateConfig(key, newValue),\n        placeholder: `Enter ${key.replace(/_/g, ' ')}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Username fields\n    if (lowerKey.includes('username') || lowerKey.includes('user') || lowerKey === 'login') {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: String(value),\n        onChange: e => updateConfig(key, e.target.value),\n        placeholder: `Enter ${key.replace(/_/g, ' ')}`,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Password fields\n    if (lowerKey.includes('password') || lowerKey.includes('passwd') || lowerKey.includes('secret')) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: String(value),\n        onChange: e => updateConfig(key, e.target.value),\n        placeholder: `Enter ${key.replace(/_/g, ' ')}`,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Connection type fields\n    if (lowerKey.includes('connection') && (lowerKey.includes('type') || lowerKey.includes('method') || lowerKey.includes('protocol'))) {\n      return /*#__PURE__*/_jsxDEV(ConnectionTypeSelector, {\n        value: String(value),\n        onChange: newValue => updateConfig(key, newValue),\n        targetType: config.os_type || config.target_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Port fields\n    if (lowerKey.includes('port') && typeof value === 'number') {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: value,\n        onChange: e => updateConfig(key, parseInt(e.target.value) || 0),\n        min: \"1\",\n        max: \"65535\",\n        style: {\n          width: '100%',\n          padding: '8px',\n          border: '1px solid #ddd',\n          borderRadius: '4px',\n          fontSize: '14px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Boolean fields\n    if (typeof value === 'boolean') {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: value,\n          onChange: e => updateConfig(key, e.target.checked),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '14px'\n          },\n          children: value ? 'Enabled' : 'Disabled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Number fields\n    if (typeof value === 'number') {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: value,\n        onChange: e => updateConfig(key, parseInt(e.target.value) || 0),\n        style: {\n          width: '100%',\n          padding: '8px',\n          border: '1px solid #ddd',\n          borderRadius: '4px',\n          fontSize: '14px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Default text input\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: String(value),\n      onChange: e => updateConfig(key, e.target.value),\n      style: {\n        width: '100%',\n        padding: '8px',\n        border: '1px solid #ddd',\n        borderRadius: '4px',\n        fontSize: '14px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  };\n  if (!isOpen || !stepNode) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        padding: '20px',\n        width: '500px',\n        maxHeight: '80vh',\n        overflow: 'auto',\n        boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px',\n          paddingBottom: '10px',\n          borderBottom: '1px solid #eee'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0,\n            color: '#333'\n          },\n          children: [\"Configure: \", stepNode.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: {\n            background: 'none',\n            border: 'none',\n            fontSize: '24px',\n            cursor: 'pointer',\n            color: '#666',\n            padding: '0',\n            width: '30px',\n            height: '30px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            fontSize: '14px'\n          },\n          children: \"Step Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: config.name || stepNode.name,\n          onChange: e => updateConfig('name', e.target.value),\n          style: {\n            width: '100%',\n            padding: '10px',\n            border: '1px solid #ddd',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), stepNode.type === 'target.assign' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '8px',\n            fontWeight: 'bold',\n            fontSize: '14px'\n          },\n          children: \"Target Selection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontSize: '13px',\n              color: '#666'\n            },\n            children: \"Selection Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: config.selection_mode || 'specific',\n            onChange: e => updateConfig('selection_mode', e.target.value),\n            style: {\n              width: '100%',\n              padding: '8px',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              fontSize: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"specific\",\n              children: \"Specific Targets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"tag-based\",\n              children: \"Tag-based Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Targets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), config.selection_mode !== 'all' && config.selection_mode !== 'tag-based' && /*#__PURE__*/_jsxDEV(JobTargetSelector, {\n          selectedTargets: (() => {\n            const targets = typeof config.target_names === 'string' && config.target_names ? config.target_names.split(',').map(t => t.trim()).filter(t => t) : [];\n            console.log('Current config.target_names:', config.target_names, 'Parsed targets:', targets);\n            return targets;\n          })(),\n          onTargetChange: targets => {\n            console.log('Target selection changed:', targets);\n            updateConfig('target_names', targets.join(','));\n          },\n          selectionMode: \"multiple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }, this), config.selection_mode === 'tag-based' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontSize: '13px',\n              color: '#666'\n            },\n            children: \"Tags (comma-separated):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: config.target_tags || '',\n            onChange: e => updateConfig('target_tags', e.target.value),\n            placeholder: \"e.g., production, web-server, database\",\n            style: {\n              width: '100%',\n              padding: '8px',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              fontSize: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 15\n        }, this), config.selection_mode === 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '10px',\n            backgroundColor: '#e3f2fd',\n            border: '1px solid #2196f3',\n            borderRadius: '4px',\n            fontSize: '13px',\n            color: '#1976d2'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Info, {\n            size: 14,\n            className: \"inline mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this), \"This step will run on all available targets\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this), (stepNode.type.includes('core') || stepNode.type.includes('workflow') || stepNode.type.startsWith('action.') || ['powershell', 'bash', 'cmd', 'ssh', 'winrm'].some(t => stepNode.type.includes(t))) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '4px',\n              fontSize: '12px',\n              fontWeight: 'bold',\n              color: '#333'\n            },\n            children: \"Target(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CompactTargetSelector, {\n            selectedTargets: config.targets || (config.target ? [config.target] : []),\n            availableTargets: targets,\n            onTargetChange: handleTargetChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '4px',\n              fontSize: '12px',\n              fontWeight: 'bold',\n              color: '#333'\n            },\n            children: \"Command:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: config.command || '',\n            onChange: e => updateConfig('command', e.target.value),\n            placeholder: \"Enter command to execute...\",\n            rows: 2,\n            style: {\n              width: '100%',\n              padding: '8px',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              fontSize: '13px',\n              fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\n              resize: 'vertical',\n              minHeight: '50px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CollapsibleSection, {\n          title: \"Connection Override\",\n          icon: /*#__PURE__*/_jsxDEV(Settings, {\n            size: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 21\n          }, this),\n          isOpen: showConnectionOverride,\n          onToggle: () => setShowConnectionOverride(!showConnectionOverride),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: '4px',\n                fontSize: '11px',\n                color: '#666'\n              },\n              children: \"Connection Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionTypeSelector, {\n              value: config.connection_method || config.connection_type || '',\n              onChange: value => {\n                updateConfig('connection_method', value);\n                updateConfig('connection_type', value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), config.port !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: '4px',\n                fontSize: '11px',\n                color: '#666'\n              },\n              children: \"Port:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: config.port || '',\n              onChange: e => updateConfig('port', parseInt(e.target.value) || 22),\n              min: \"1\",\n              max: \"65535\",\n              placeholder: \"22 (SSH) or 5985 (WinRM)\",\n              style: {\n                width: '80px',\n                padding: '4px 6px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                fontSize: '12px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CollapsibleSection, {\n          title: \"Credential Override\",\n          icon: /*#__PURE__*/_jsxDEV(User, {\n            size: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 21\n          }, this),\n          isOpen: showCredentialOverride,\n          onToggle: () => setShowCredentialOverride(!showCredentialOverride),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: '4px',\n                fontSize: '11px',\n                color: '#666'\n              },\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: config.username || '',\n              onChange: e => updateConfig('username', e.target.value),\n              placeholder: \"Override username\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: '4px',\n                fontSize: '11px',\n                color: '#666'\n              },\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: config.password || '',\n              onChange: e => updateConfig('password', e.target.value),\n              placeholder: \"Override password\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }, this), Object.entries(config).map(([key, value]) => {\n        // Skip already handled fields\n        if (['name', 'target_names', 'selection_mode', 'target_tags', 'target', 'targets', 'target_host', 'connection_type', 'connection_method', 'username', 'password', 'port', 'command', 'timeout', 'timeout_seconds'].includes(key)) {\n          return null;\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              fontSize: '13px'\n            },\n            children: [key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this), renderFieldInput(key, value)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginTop: '20px',\n          paddingTop: '15px',\n          borderTop: '1px solid #eee'\n        },\n        children: [(stepNode.type.includes('core') || stepNode.type.includes('workflow') || stepNode.type.startsWith('action.') || ['powershell', 'bash', 'cmd', 'ssh', 'winrm'].some(t => stepNode.type.includes(t))) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '6px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              fontSize: '11px',\n              color: '#666',\n              whiteSpace: 'nowrap'\n            },\n            children: \"Timeout:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: config.timeout_seconds || config.timeout || 60,\n            onChange: e => {\n              const timeout = parseInt(e.target.value) || 60;\n              updateConfig('timeout_seconds', timeout);\n              updateConfig('timeout', timeout); // Keep both for compatibility\n            },\n            min: \"1\",\n            max: \"3600\",\n            style: {\n              width: '50px',\n              padding: '2px 4px',\n              border: '1px solid #ddd',\n              borderRadius: '3px',\n              fontSize: '11px',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '11px',\n              color: '#666'\n            },\n            children: \"sec\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            style: {\n              padding: '8px 16px',\n              backgroundColor: '#6c757d',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '13px'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            style: {\n              padding: '8px 16px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '13px'\n            },\n            children: \"Save Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n}, \"ICw6H8M3G9OUd99KJYK8mZXTzLs=\"), (prevProps, nextProps) => {\n  var _prevProps$stepNode, _nextProps$stepNode, _prevProps$stepNode2, _nextProps$stepNode2;\n  // Custom comparison function for React.memo\n  return prevProps.isOpen === nextProps.isOpen && ((_prevProps$stepNode = prevProps.stepNode) === null || _prevProps$stepNode === void 0 ? void 0 : _prevProps$stepNode.id) === ((_nextProps$stepNode = nextProps.stepNode) === null || _nextProps$stepNode === void 0 ? void 0 : _nextProps$stepNode.id) && JSON.stringify((_prevProps$stepNode2 = prevProps.stepNode) === null || _prevProps$stepNode2 === void 0 ? void 0 : _prevProps$stepNode2.config) === JSON.stringify((_nextProps$stepNode2 = nextProps.stepNode) === null || _nextProps$stepNode2 === void 0 ? void 0 : _nextProps$stepNode2.config);\n}), \"ICw6H8M3G9OUd99KJYK8mZXTzLs=\");\n_c2 = StepConfigModal;\nexport default StepConfigModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"StepConfigModal$React.memo\");\n$RefreshReg$(_c2, \"StepConfigModal\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","JobTargetSelector","TargetFieldSelector","ConnectionTypeSelector","targetApi","X","Info","ChevronDown","ChevronRight","Settings","User","jsxDEV","_jsxDEV","StepConfigModal","_s","memo","_c","isOpen","onClose","onSave","stepNode","config","setConfig","targets","setTargets","showConnectionOverride","setShowConnectionOverride","showCredentialOverride","setShowCredentialOverride","initialConfig","target_names","undefined","selection_mode","id","fetchTargets","response","list","err","console","error","handleSave","updateConfig","key","value","prev","handleTargetChange","length","handleTargetSelection","targetNames","targetName","selectedTarget","find","t","name","updates","target","target_host","hostname","ip_address","os_type","toLowerCase","connection_method","connection_type","port","credential_ref","username","password","CompactTargetSelector","selectedTargets","onTargetChange","availableTargets","handleTargetToggle","isSelected","includes","newSelection","filter","style","width","height","border","borderRadius","backgroundColor","overflowY","padding","children","map","display","alignItems","fontSize","cursor","marginBottom","onClick","type","checked","onChange","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","whiteSpace","CollapsibleSection","title","icon","onToggle","gap","color","textAlign","size","borderTop","renderFieldInput","lowerKey","String","newValue","placeholder","replace","e","className","targetType","target_type","parseInt","min","max","position","top","left","right","bottom","justifyContent","zIndex","maxHeight","overflow","boxShadow","paddingBottom","borderBottom","margin","background","fontWeight","split","trim","log","join","selectionMode","target_tags","startsWith","some","command","rows","fontFamily","resize","minHeight","Object","entries","l","toUpperCase","marginTop","paddingTop","timeout_seconds","timeout","prevProps","nextProps","_prevProps$stepNode","_nextProps$stepNode","_prevProps$stepNode2","_nextProps$stepNode2","JSON","stringify","_c2","$RefreshReg$"],"sources":["/app/src/components/StepConfigModal.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport JobTargetSelector from './JobTargetSelector';\n\nimport TargetFieldSelector from './TargetFieldSelector';\nimport ConnectionTypeSelector from './ConnectionTypeSelector';\nimport { targetApi } from '../services/api';\nimport { Target } from '../types';\nimport { X, Info, ChevronDown, ChevronRight, Settings, User, Lock } from 'lucide-react';\n\ninterface StepConfigModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (config: any) => void;\n  stepNode: {\n    id: string;\n    name: string;\n    type: string;\n    config: any;\n  } | null;\n}\n\nconst StepConfigModal: React.FC<StepConfigModalProps> = React.memo(({\n  isOpen,\n  onClose,\n  onSave,\n  stepNode\n}) => {\n  const [config, setConfig] = useState<any>({});\n  const [targets, setTargets] = useState<Target[]>([]);\n  const [showConnectionOverride, setShowConnectionOverride] = useState(false);\n  const [showCredentialOverride, setShowCredentialOverride] = useState(false);\n\n  useEffect(() => {\n    if (stepNode) {\n      const initialConfig = { ...stepNode.config };\n      // Ensure target_names is always a string\n      if (initialConfig.target_names === undefined || initialConfig.target_names === null) {\n        initialConfig.target_names = '';\n      }\n      // Ensure selection_mode has a default value\n      if (!initialConfig.selection_mode) {\n        initialConfig.selection_mode = 'specific';\n      }\n      setConfig(initialConfig);\n    }\n  }, [stepNode?.id]);\n\n  useEffect(() => {\n    fetchTargets();\n  }, []);\n\n  const fetchTargets = async () => {\n    try {\n      const response = await targetApi.list(0, 1000);\n      setTargets(response.targets || []);\n    } catch (err) {\n      console.error('Failed to fetch targets:', err);\n    }\n  };\n\n  const handleSave = () => {\n    onSave(config);\n    onClose();\n  };\n\n  const updateConfig = useCallback((key: string, value: any) => {\n    setConfig((prev: any) => ({\n      ...prev,\n      [key]: value\n    }));\n  }, []);\n\n  const handleTargetChange = useCallback((targets: string[]) => {\n    // Store multiple targets\n    updateConfig('targets', targets);\n    // Also set the first target as primary for backward compatibility\n    if (targets.length > 0) {\n      updateConfig('target', targets[0]);\n    } else {\n      updateConfig('target', '');\n    }\n  }, [updateConfig]);\n\n  const handleTargetSelection = (targetNames: string[]) => {\n    const targetName = targetNames[0];\n    if (!targetName) return;\n\n    // Find the selected target\n    const selectedTarget = targets.find(t => t.name === targetName);\n    if (!selectedTarget) return;\n\n    // Auto-populate fields based on target configuration\n    const updates: any = {\n      target: targetName,\n      target_host: selectedTarget.hostname || selectedTarget.ip_address || targetName\n    };\n\n    // Auto-populate connection method based on target OS and available methods\n    if (selectedTarget.os_type) {\n      switch (selectedTarget.os_type.toLowerCase()) {\n        case 'windows':\n          updates.connection_method = 'winrm';\n          updates.connection_type = 'winrm'; // Keep both for compatibility\n          break;\n        case 'linux':\n        case 'unix':\n          updates.connection_method = 'ssh';\n          updates.connection_type = 'ssh'; // Keep both for compatibility\n          break;\n        default:\n          updates.connection_method = 'ssh';\n          updates.connection_type = 'ssh'; // Keep both for compatibility\n      }\n    }\n\n    // Auto-populate port if available\n    if (selectedTarget.port) {\n      updates.port = selectedTarget.port;\n    }\n\n    // Auto-populate credentials if target has associated credentials\n    if (selectedTarget.credential_ref) {\n      // You could fetch credential details here and populate username\n      updates.username = `{{credential:${selectedTarget.credential_ref}:username}}`;\n      updates.password = `{{credential:${selectedTarget.credential_ref}:password}}`;\n    }\n\n    // Apply all updates at once\n    setConfig((prev: any) => ({\n      ...prev,\n      ...updates\n    }));\n  };\n\n  // Compact Target Selector Component\n  const CompactTargetSelector = ({ selectedTargets, onTargetChange, availableTargets }: { \n    selectedTargets: string[], \n    onTargetChange: (targets: string[]) => void,\n    availableTargets: Target[]\n  }) => {\n    const handleTargetToggle = (targetName: string) => {\n      const isSelected = selectedTargets.includes(targetName);\n      let newSelection: string[];\n      \n      if (isSelected) {\n        // Remove target\n        newSelection = selectedTargets.filter(t => t !== targetName);\n      } else {\n        // Add target\n        newSelection = [...selectedTargets, targetName];\n      }\n      \n      onTargetChange(newSelection);\n    };\n    \n    return (\n      <div style={{\n        width: '100%',\n        height: '120px',\n        border: '1px solid #ddd',\n        borderRadius: '4px',\n        backgroundColor: 'white',\n        overflowY: 'auto',\n        padding: '4px'\n      }}>\n        {availableTargets.map(target => (\n          <div \n            key={target.name}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              padding: '2px 4px',\n              fontSize: '12px',\n              cursor: 'pointer',\n              backgroundColor: selectedTargets.includes(target.name) ? '#e3f2fd' : 'transparent',\n              borderRadius: '2px',\n              marginBottom: '1px'\n            }}\n            onClick={() => handleTargetToggle(target.name)}\n          >\n            <input\n              type=\"checkbox\"\n              checked={selectedTargets.includes(target.name)}\n              onChange={() => {}} // Handled by div onClick\n              style={{ marginRight: '6px', cursor: 'pointer' }}\n            />\n            <span style={{ whiteSpace: 'nowrap' }}>\n              {target.name} ({target.hostname || target.ip_address}) - {target.os_type || 'Unknown'}\n            </span>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // Collapsible Section Component\n  const CollapsibleSection = ({ \n    title, \n    icon, \n    isOpen, \n    onToggle, \n    children \n  }: { \n    title: string, \n    icon: React.ReactNode, \n    isOpen: boolean, \n    onToggle: () => void, \n    children: React.ReactNode \n  }) => {\n    return (\n      <div style={{ marginBottom: '10px' }}>\n        <button\n          type=\"button\"\n          onClick={onToggle}\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '6px',\n            width: '100%',\n            padding: '6px 8px',\n            backgroundColor: '#f8f9fa',\n            border: '1px solid #e9ecef',\n            borderRadius: '4px',\n            fontSize: '12px',\n            color: '#495057',\n            cursor: 'pointer',\n            textAlign: 'left'\n          }}\n        >\n          {isOpen ? <ChevronDown size={14} /> : <ChevronRight size={14} />}\n          {icon}\n          <span>{title}</span>\n        </button>\n        {isOpen && (\n          <div style={{ \n            padding: '10px', \n            border: '1px solid #e9ecef', \n            borderTop: 'none',\n            borderRadius: '0 0 4px 4px',\n            backgroundColor: '#fafbfc'\n          }}>\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Function to determine field type and render appropriate selector\n  const renderFieldInput = (key: string, value: any) => {\n    const lowerKey = key.toLowerCase();\n    \n    // Target-related fields\n    if (lowerKey.includes('target') && (lowerKey.includes('host') || lowerKey.includes('hostname') || lowerKey.includes('ip') || lowerKey.includes('address'))) {\n      return (\n        <TargetFieldSelector\n          value={String(value)}\n          onChange={(newValue) => updateConfig(key, newValue)}\n          placeholder={`Enter ${key.replace(/_/g, ' ')}`}\n        />\n      );\n    }\n    \n    // Username fields\n    if (lowerKey.includes('username') || lowerKey.includes('user') || lowerKey === 'login') {\n      return (\n        <input\n          type=\"text\"\n          value={String(value)}\n          onChange={(e) => updateConfig(key, e.target.value)}\n          placeholder={`Enter ${key.replace(/_/g, ' ')}`}\n          className=\"form-control\"\n        />\n      );\n    }\n    \n    // Password fields\n    if (lowerKey.includes('password') || lowerKey.includes('passwd') || lowerKey.includes('secret')) {\n      return (\n        <input\n          type=\"password\"\n          value={String(value)}\n          onChange={(e) => updateConfig(key, e.target.value)}\n          placeholder={`Enter ${key.replace(/_/g, ' ')}`}\n          className=\"form-control\"\n        />\n      );\n    }\n    \n    // Connection type fields\n    if (lowerKey.includes('connection') && (lowerKey.includes('type') || lowerKey.includes('method') || lowerKey.includes('protocol'))) {\n      return (\n        <ConnectionTypeSelector\n          value={String(value)}\n          onChange={(newValue) => updateConfig(key, newValue)}\n          targetType={config.os_type || config.target_type}\n        />\n      );\n    }\n    \n    // Port fields\n    if (lowerKey.includes('port') && typeof value === 'number') {\n      return (\n        <input\n          type=\"number\"\n          value={value}\n          onChange={(e) => updateConfig(key, parseInt(e.target.value) || 0)}\n          min=\"1\"\n          max=\"65535\"\n          style={{\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #ddd',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }}\n        />\n      );\n    }\n    \n    // Boolean fields\n    if (typeof value === 'boolean') {\n      return (\n        <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n          <input\n            type=\"checkbox\"\n            checked={value}\n            onChange={(e) => updateConfig(key, e.target.checked)}\n            style={{ marginRight: '8px' }}\n          />\n          <span style={{ fontSize: '14px' }}>\n            {value ? 'Enabled' : 'Disabled'}\n          </span>\n        </label>\n      );\n    }\n    \n    // Number fields\n    if (typeof value === 'number') {\n      return (\n        <input\n          type=\"number\"\n          value={value}\n          onChange={(e) => updateConfig(key, parseInt(e.target.value) || 0)}\n          style={{\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #ddd',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }}\n        />\n      );\n    }\n    \n    // Default text input\n    return (\n      <input\n        type=\"text\"\n        value={String(value)}\n        onChange={(e) => updateConfig(key, e.target.value)}\n        style={{\n          width: '100%',\n          padding: '8px',\n          border: '1px solid #ddd',\n          borderRadius: '4px',\n          fontSize: '14px'\n        }}\n      />\n    );\n  };\n\n  if (!isOpen || !stepNode) {\n    return null;\n  }\n\n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000\n    }}>\n      <div style={{\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        padding: '20px',\n        width: '500px',\n        maxHeight: '80vh',\n        overflow: 'auto',\n        boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n      }}>\n        {/* Header */}\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px',\n          paddingBottom: '10px',\n          borderBottom: '1px solid #eee'\n        }}>\n          <h3 style={{ margin: 0, color: '#333' }}>\n            Configure: {stepNode.name}\n          </h3>\n          <button\n            onClick={onClose}\n            style={{\n              background: 'none',\n              border: 'none',\n              fontSize: '24px',\n              cursor: 'pointer',\n              color: '#666',\n              padding: '0',\n              width: '30px',\n              height: '30px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        {/* Step Name */}\n        <div style={{ marginBottom: '20px' }}>\n          <label style={{ \n            display: 'block', \n            marginBottom: '8px', \n            fontWeight: 'bold',\n            fontSize: '14px'\n          }}>\n            Step Name:\n          </label>\n          <input\n            type=\"text\"\n            value={config.name || stepNode.name}\n            onChange={(e) => updateConfig('name', e.target.value)}\n            style={{\n              width: '100%',\n              padding: '10px',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              fontSize: '14px'\n            }}\n          />\n        </div>\n\n        {/* Target Assignment Configuration */}\n        {stepNode.type === 'target.assign' && (\n          <div style={{ marginBottom: '20px' }}>\n            <label style={{ \n              display: 'block', \n              marginBottom: '8px', \n              fontWeight: 'bold',\n              fontSize: '14px'\n            }}>\n              Target Selection:\n            </label>\n            \n            {/* Selection Mode */}\n            <div style={{ marginBottom: '15px' }}>\n              <label style={{ \n                display: 'block', \n                marginBottom: '5px', \n                fontSize: '13px',\n                color: '#666'\n              }}>\n                Selection Mode:\n              </label>\n              <select\n                value={config.selection_mode || 'specific'}\n                onChange={(e) => updateConfig('selection_mode', e.target.value)}\n                style={{\n                  width: '100%',\n                  padding: '8px',\n                  border: '1px solid #ddd',\n                  borderRadius: '4px',\n                  fontSize: '14px'\n                }}\n              >\n                <option value=\"specific\">Specific Targets</option>\n                <option value=\"tag-based\">Tag-based Selection</option>\n                <option value=\"all\">All Targets</option>\n              </select>\n            </div>\n\n            {/* Target Selector for specific mode */}\n            {config.selection_mode !== 'all' && config.selection_mode !== 'tag-based' && (\n              <JobTargetSelector\n                selectedTargets={(() => {\n                  const targets = typeof config.target_names === 'string' && config.target_names\n                    ? config.target_names.split(',').map((t: string) => t.trim()).filter((t: string) => t)\n                    : [];\n                  console.log('Current config.target_names:', config.target_names, 'Parsed targets:', targets);\n                  return targets;\n                })()}\n                onTargetChange={(targets) => {\n                  console.log('Target selection changed:', targets);\n                  updateConfig('target_names', targets.join(','));\n                }}\n                selectionMode=\"multiple\"\n              />\n            )}\n\n            {/* Tag-based selection */}\n            {config.selection_mode === 'tag-based' && (\n              <div>\n                <label style={{ \n                  display: 'block', \n                  marginBottom: '5px', \n                  fontSize: '13px',\n                  color: '#666'\n                }}>\n                  Tags (comma-separated):\n                </label>\n                <input\n                  type=\"text\"\n                  value={config.target_tags || ''}\n                  onChange={(e) => updateConfig('target_tags', e.target.value)}\n                  placeholder=\"e.g., production, web-server, database\"\n                  style={{\n                    width: '100%',\n                    padding: '8px',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    fontSize: '14px'\n                  }}\n                />\n              </div>\n            )}\n\n            {/* All targets mode info */}\n            {config.selection_mode === 'all' && (\n              <div style={{\n                padding: '10px',\n                backgroundColor: '#e3f2fd',\n                border: '1px solid #2196f3',\n                borderRadius: '4px',\n                fontSize: '13px',\n                color: '#1976d2'\n              }}>\n                <Info size={14} className=\"inline mr-1\" />This step will run on all available targets\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Core Workflow Configuration */}\n        {(stepNode.type.includes('core') || stepNode.type.includes('workflow') || \n          stepNode.type.startsWith('action.') ||\n          ['powershell', 'bash', 'cmd', 'ssh', 'winrm'].some(t => stepNode.type.includes(t))) && (\n          <div style={{ marginBottom: '15px' }}>\n            {/* Compact Target Selection */}\n            <div style={{ marginBottom: '10px' }}>\n              <label style={{ \n                display: 'block', \n                marginBottom: '4px', \n                fontSize: '12px',\n                fontWeight: 'bold',\n                color: '#333'\n              }}>\n                Target(s):\n              </label>\n              <CompactTargetSelector\n                selectedTargets={config.targets || (config.target ? [config.target] : [])}\n                availableTargets={targets}\n                onTargetChange={handleTargetChange}\n              />\n            </div>\n\n            {/* Command Field - Larger */}\n            <div style={{ marginBottom: '10px' }}>\n              <label style={{ \n                display: 'block', \n                marginBottom: '4px', \n                fontSize: '12px',\n                fontWeight: 'bold',\n                color: '#333'\n              }}>\n                Command:\n              </label>\n              <textarea\n                value={config.command || ''}\n                onChange={(e) => updateConfig('command', e.target.value)}\n                placeholder=\"Enter command to execute...\"\n                rows={2}\n                style={{\n                  width: '100%',\n                  padding: '8px',\n                  border: '1px solid #ddd',\n                  borderRadius: '4px',\n                  fontSize: '13px',\n                  fontFamily: 'Monaco, Consolas, \"Courier New\", monospace',\n                  resize: 'vertical',\n                  minHeight: '50px'\n                }}\n              />\n            </div>\n\n            {/* Collapsible Connection Override */}\n            <CollapsibleSection\n              title=\"Connection Override\"\n              icon={<Settings size={12} />}\n              isOpen={showConnectionOverride}\n              onToggle={() => setShowConnectionOverride(!showConnectionOverride)}\n            >\n              <div style={{ marginBottom: '10px' }}>\n                <label style={{ \n                  display: 'block', \n                  marginBottom: '4px', \n                  fontSize: '11px',\n                  color: '#666'\n                }}>\n                  Connection Method:\n                </label>\n                <ConnectionTypeSelector\n                  value={config.connection_method || config.connection_type || ''}\n                  onChange={(value) => {\n                    updateConfig('connection_method', value);\n                    updateConfig('connection_type', value);\n                  }}\n                />\n              </div>\n              \n              {config.port !== undefined && (\n                <div>\n                  <label style={{ \n                    display: 'block', \n                    marginBottom: '4px', \n                    fontSize: '11px',\n                    color: '#666'\n                  }}>\n                    Port:\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={config.port || ''}\n                    onChange={(e) => updateConfig('port', parseInt(e.target.value) || 22)}\n                    min=\"1\"\n                    max=\"65535\"\n                    placeholder=\"22 (SSH) or 5985 (WinRM)\"\n                    style={{\n                      width: '80px',\n                      padding: '4px 6px',\n                      border: '1px solid #ddd',\n                      borderRadius: '4px',\n                      fontSize: '12px'\n                    }}\n                  />\n                </div>\n              )}\n            </CollapsibleSection>\n\n            {/* Collapsible Credential Override */}\n            <CollapsibleSection\n              title=\"Credential Override\"\n              icon={<User size={12} />}\n              isOpen={showCredentialOverride}\n              onToggle={() => setShowCredentialOverride(!showCredentialOverride)}\n            >\n              <div style={{ marginBottom: '10px' }}>\n                <label style={{ \n                  display: 'block', \n                  marginBottom: '4px', \n                  fontSize: '11px',\n                  color: '#666'\n                }}>\n                  Username:\n                </label>\n                <input\n                  type=\"text\"\n                  value={config.username || ''}\n                  onChange={(e) => updateConfig('username', e.target.value)}\n                  placeholder=\"Override username\"\n                  className=\"form-control\"\n                />\n              </div>\n              \n              <div>\n                <label style={{ \n                  display: 'block', \n                  marginBottom: '4px', \n                  fontSize: '11px',\n                  color: '#666'\n                }}>\n                  Password:\n                </label>\n                <input\n                  type=\"password\"\n                  value={config.password || ''}\n                  onChange={(e) => updateConfig('password', e.target.value)}\n                  placeholder=\"Override password\"\n                  className=\"form-control\"\n                />\n              </div>\n            </CollapsibleSection>\n          </div>\n        )}\n\n        {/* Other step configurations */}\n        {Object.entries(config).map(([key, value]) => {\n          // Skip already handled fields\n          if (['name', 'target_names', 'selection_mode', 'target_tags', 'target', 'targets', 'target_host', 'connection_type', 'connection_method', 'username', 'password', 'port', 'command', 'timeout', 'timeout_seconds'].includes(key)) {\n            return null;\n          }\n\n          return (\n            <div key={key} style={{ marginBottom: '15px' }}>\n              <label style={{ \n                display: 'block', \n                marginBottom: '5px', \n                fontWeight: 'bold',\n                fontSize: '13px'\n              }}>\n                {key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}:\n              </label>\n              \n              {renderFieldInput(key, value)}\n            </div>\n          );\n        })}\n\n        {/* Footer */}\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginTop: '20px',\n          paddingTop: '15px',\n          borderTop: '1px solid #eee'\n        }}>\n          {/* Compact Timeout Field */}\n          {(stepNode.type.includes('core') || stepNode.type.includes('workflow') || \n            stepNode.type.startsWith('action.') ||\n            ['powershell', 'bash', 'cmd', 'ssh', 'winrm'].some(t => stepNode.type.includes(t))) && (\n            <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\n              <label style={{ \n                fontSize: '11px',\n                color: '#666',\n                whiteSpace: 'nowrap'\n              }}>\n                Timeout:\n              </label>\n              <input\n                type=\"number\"\n                value={config.timeout_seconds || config.timeout || 60}\n                onChange={(e) => {\n                  const timeout = parseInt(e.target.value) || 60;\n                  updateConfig('timeout_seconds', timeout);\n                  updateConfig('timeout', timeout); // Keep both for compatibility\n                }}\n                min=\"1\"\n                max=\"3600\"\n                style={{\n                  width: '50px',\n                  padding: '2px 4px',\n                  border: '1px solid #ddd',\n                  borderRadius: '3px',\n                  fontSize: '11px',\n                  textAlign: 'center'\n                }}\n              />\n              <span style={{ fontSize: '11px', color: '#666' }}>sec</span>\n            </div>\n          )}\n          \n          {/* Action Buttons */}\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <button\n              onClick={onClose}\n              style={{\n                padding: '8px 16px',\n                backgroundColor: '#6c757d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '13px'\n              }}\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleSave}\n              style={{\n                padding: '8px 16px',\n                backgroundColor: '#007bff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '13px'\n              }}\n            >\n              Save Configuration\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}, (prevProps, nextProps) => {\n  // Custom comparison function for React.memo\n  return (\n    prevProps.isOpen === nextProps.isOpen &&\n    prevProps.stepNode?.id === nextProps.stepNode?.id &&\n    JSON.stringify(prevProps.stepNode?.config) === JSON.stringify(nextProps.stepNode?.config)\n  );\n});\n\nexport default StepConfigModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}