{"ast":null,"code":"var _jsxFileName = \"/app/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing session token in localStorage on mount\n    const storedToken = localStorage.getItem('access_token');\n    const storedUser = localStorage.getItem('user');\n    console.log('AuthContext: storedToken =', storedToken);\n    console.log('AuthContext: storedUser =', storedUser);\n    if (storedToken && storedUser && storedUser !== 'undefined' && storedUser !== 'null') {\n      setToken(storedToken);\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Failed to parse stored user data:', error);\n        // Clear invalid data\n        localStorage.removeItem('user');\n        localStorage.removeItem('access_token');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = (newToken, newUser) => {\n    setToken(newToken);\n    setUser(newUser);\n    localStorage.setItem('access_token', newToken);\n    localStorage.setItem('user', JSON.stringify(newUser));\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n  };\n  const value = {\n    token,\n    user,\n    login,\n    logout,\n    isAuthenticated: !!token,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"ZLXmwBzIl9DmLysvk9GZ+SP3LK8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","token","setToken","user","setUser","isLoading","setIsLoading","storedToken","localStorage","getItem","storedUser","console","log","JSON","parse","error","removeItem","login","newToken","newUser","setItem","stringify","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User } from '../utils/permissions';\n\ninterface AuthContextType {\n  token: string | null;\n  user: User | null;\n  login: (token: string, user: User) => void;\n  logout: () => void;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [token, setToken] = useState<string | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing session token in localStorage on mount\n    const storedToken = localStorage.getItem('access_token');\n    const storedUser = localStorage.getItem('user');\n    \n    console.log('AuthContext: storedToken =', storedToken);\n    console.log('AuthContext: storedUser =', storedUser);\n    \n    if (storedToken && storedUser && storedUser !== 'undefined' && storedUser !== 'null') {\n      setToken(storedToken);\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Failed to parse stored user data:', error);\n        // Clear invalid data\n        localStorage.removeItem('user');\n        localStorage.removeItem('access_token');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = (newToken: string, newUser: User) => {\n    setToken(newToken);\n    setUser(newUser);\n    localStorage.setItem('access_token', newToken);\n    localStorage.setItem('user', JSON.stringify(newUser));\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n  };\n\n  const value = {\n    token,\n    user,\n    login,\n    logout,\n    isAuthenticated: !!token,\n    isLoading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}