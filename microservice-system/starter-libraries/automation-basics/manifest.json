{
  "metadata": {
    "name": "automation-basics",
    "version": "1.0.0",
    "display_name": "Automation Basics",
    "description": "Essential automation steps including delays, conditions, loops, and data manipulation",
    "author": "OpsConductor Team",
    "author_email": "support@opsconductor.com",
    "homepage": "https://opsconductor.com/libraries/automation-basics",
    "repository": "https://github.com/opsconductor/automation-basics-library",
    "license": "MIT",
    "categories": [
      "automation",
      "control",
      "data"
    ],
    "tags": [
      "delay",
      "condition",
      "loop",
      "variable",
      "data",
      "control"
    ],
    "dependencies": [],
    "min_opsconductor_version": "1.0.0",
    "is_premium": false
  },
  "steps": [
    {
      "name": "delay",
      "display_name": "Delay/Wait",
      "category": "Control Flow",
      "description": "Pause execution for a specified amount of time",
      "icon": "\u23f1\ufe0f",
      "color": "#6c757d",
      "inputs": 1,
      "outputs": 1,
      "parameters": {
        "duration": {
          "type": "number",
          "required": true,
          "default": 5,
          "description": "How long to wait in seconds",
          "validation": {
            "min": 0.1,
            "max": 3600,
            "label": "Duration (seconds)"
          }
        },
        "unit": {
          "type": "string",
          "default": "seconds",
          "description": "Unit of time for the duration",
          "options": [
            "seconds",
            "minutes",
            "hours"
          ],
          "validation": {
            "label": "Time Unit"
          }
        },
        "message": {
          "type": "string",
          "required": false,
          "description": "Optional message to display during wait",
          "validation": {
            "placeholder": "Waiting for system to stabilize...",
            "label": "Wait Message"
          }
        }
      },
      "platform_support": [
        "windows",
        "linux",
        "macos"
      ],
      "required_permissions": [],
      "examples": [
        {
          "name": "Short Pause",
          "description": "Wait 5 seconds between operations",
          "parameters": {
            "duration": 5,
            "unit": "seconds",
            "message": "Pausing between operations"
          }
        },
        {
          "name": "Service Restart Wait",
          "description": "Wait 2 minutes for service to fully restart",
          "parameters": {
            "duration": 2,
            "unit": "minutes",
            "message": "Waiting for service to restart"
          }
        }
      ]
    },
    {
      "name": "condition_check",
      "display_name": "Condition Check",
      "category": "Control Flow",
      "description": "Evaluate conditions and branch execution flow",
      "icon": "\ud83d\udd00",
      "color": "#ffc107",
      "inputs": 1,
      "outputs": 2,
      "parameters": {
        "condition_type": {
          "type": "string",
          "required": true,
          "default": "string_equals",
          "description": "Type of condition to evaluate",
          "options": [
            "string_equals",
            "string_contains",
            "number_equals",
            "number_greater",
            "number_less",
            "file_exists",
            "service_running",
            "custom_script"
          ],
          "validation": {
            "label": "Condition Type"
          }
        },
        "left_value": {
          "type": "string",
          "required": true,
          "description": "First value to compare",
          "validation": {
            "placeholder": "Value1",
            "label": "Left Value"
          }
        },
        "right_value": {
          "type": "string",
          "required": false,
          "description": "Second value to compare (if applicable)",
          "validation": {
            "placeholder": "Value2",
            "label": "Right Value"
          }
        },
        "case_sensitive": {
          "type": "boolean",
          "default": false,
          "description": "Make string comparisons case sensitive",
          "validation": {
            "label": "Case Sensitive"
          }
        },
        "custom_script": {
          "type": "string",
          "required": false,
          "description": "Custom PowerShell script for complex conditions",
          "validation": {
            "placeholder": "(Get-Service 'Spooler').Status -eq 'Running'",
            "label": "Custom Script"
          }
        }
      },
      "platform_support": [
        "windows",
        "linux",
        "macos"
      ],
      "required_permissions": [],
      "examples": [
        {
          "name": "Check File Exists",
          "description": "Check if a configuration file exists",
          "parameters": {
            "condition_type": "file_exists",
            "left_value": "C:\\App\\config.xml"
          }
        },
        {
          "name": "Compare Numbers",
          "description": "Check if CPU usage is above threshold",
          "parameters": {
            "condition_type": "number_greater",
            "left_value": "85",
            "right_value": "80"
          }
        }
      ]
    },
    {
      "name": "set_variable",
      "display_name": "Set Variable",
      "category": "Data",
      "description": "Set or modify variables for use in subsequent steps",
      "icon": "\ud83d\udcdd",
      "color": "#20c997",
      "inputs": 1,
      "outputs": 1,
      "parameters": {
        "variable_name": {
          "type": "string",
          "required": true,
          "description": "Name of the variable to set",
          "validation": {
            "placeholder": "my_variable",
            "label": "Variable Name"
          }
        },
        "variable_value": {
          "type": "string",
          "required": true,
          "description": "Value to assign to the variable",
          "validation": {
            "placeholder": "Hello World",
            "label": "Variable Value"
          }
        },
        "variable_type": {
          "type": "string",
          "default": "string",
          "description": "Data type of the variable",
          "options": [
            "string",
            "number",
            "boolean",
            "json",
            "array"
          ],
          "validation": {
            "label": "Variable Type"
          }
        },
        "scope": {
          "type": "string",
          "default": "job",
          "description": "Scope of the variable",
          "options": [
            "job",
            "global",
            "step"
          ],
          "validation": {
            "label": "Variable Scope"
          }
        }
      },
      "platform_support": [
        "windows",
        "linux",
        "macos"
      ],
      "required_permissions": [],
      "examples": [
        {
          "name": "Set Server Name",
          "description": "Store server name for reuse",
          "parameters": {
            "variable_name": "server_name",
            "variable_value": "PROD-WEB-01",
            "variable_type": "string",
            "scope": "job"
          }
        },
        {
          "name": "Set Retry Count",
          "description": "Set numeric counter for loops",
          "parameters": {
            "variable_name": "retry_count",
            "variable_value": "3",
            "variable_type": "number",
            "scope": "job"
          }
        }
      ]
    },
    {
      "name": "loop_control",
      "display_name": "Loop Control",
      "category": "Control Flow",
      "description": "Create loops for repeating operations",
      "icon": "\ud83d\udd04",
      "color": "#e83e8c",
      "inputs": 1,
      "outputs": 2,
      "parameters": {
        "loop_type": {
          "type": "string",
          "required": true,
          "default": "for_count",
          "description": "Type of loop to create",
          "options": [
            "for_count",
            "for_each",
            "while_condition",
            "until_condition"
          ],
          "validation": {
            "label": "Loop Type"
          }
        },
        "count": {
          "type": "number",
          "default": 5,
          "description": "Number of iterations (for count loops)",
          "validation": {
            "min": 1,
            "max": 1000,
            "label": "Loop Count"
          }
        },
        "items": {
          "type": "string",
          "description": "Items to iterate over (one per line)",
          "validation": {
            "placeholder": "server1\nserver2\nserver3",
            "label": "Items to Loop"
          }
        },
        "condition": {
          "type": "string",
          "description": "Condition for while/until loops",
          "validation": {
            "placeholder": "$retry_count -lt 5",
            "label": "Loop Condition"
          }
        },
        "max_iterations": {
          "type": "number",
          "default": 100,
          "description": "Safety limit for condition-based loops",
          "validation": {
            "min": 1,
            "max": 10000,
            "label": "Max Iterations"
          }
        }
      },
      "platform_support": [
        "windows",
        "linux",
        "macos"
      ],
      "required_permissions": [],
      "examples": [
        {
          "name": "Retry 3 Times",
          "description": "Retry an operation up to 3 times",
          "parameters": {
            "loop_type": "for_count",
            "count": 3
          }
        },
        {
          "name": "Process Server List",
          "description": "Loop through multiple servers",
          "parameters": {
            "loop_type": "for_each",
            "items": "web-server-01\nweb-server-02\ndb-server-01"
          }
        }
      ]
    },
    {
      "name": "text_manipulation",
      "display_name": "Text Manipulation",
      "category": "Data",
      "description": "Manipulate and transform text data",
      "icon": "\u2702\ufe0f",
      "color": "#6f42c1",
      "inputs": 1,
      "outputs": 1,
      "parameters": {
        "operation": {
          "type": "string",
          "required": true,
          "default": "trim",
          "description": "Text manipulation operation to perform",
          "options": [
            "uppercase",
            "lowercase",
            "trim",
            "replace",
            "substring",
            "split",
            "join",
            "regex_match",
            "regex_replace"
          ],
          "validation": {
            "label": "Operation"
          }
        },
        "input_text": {
          "type": "string",
          "required": true,
          "description": "Text to manipulate",
          "validation": {
            "placeholder": "Enter text here",
            "label": "Input Text"
          }
        },
        "find_text": {
          "type": "string",
          "description": "Text to find (for replace operations)",
          "validation": {
            "placeholder": "old_value",
            "label": "Find Text"
          }
        },
        "replace_text": {
          "type": "string",
          "description": "Replacement text",
          "validation": {
            "placeholder": "new_value",
            "label": "Replace Text"
          }
        },
        "start_position": {
          "type": "number",
          "default": 0,
          "description": "Starting position for substring operations",
          "validation": {
            "min": 0,
            "label": "Start Position"
          }
        },
        "length": {
          "type": "number",
          "description": "Length for substring operations",
          "validation": {
            "min": 1,
            "label": "Length"
          }
        },
        "separator": {
          "type": "string",
          "default": ",",
          "description": "Separator for split/join operations",
          "validation": {
            "label": "Separator"
          }
        }
      },
      "platform_support": [
        "windows",
        "linux",
        "macos"
      ],
      "required_permissions": [],
      "examples": [
        {
          "name": "Clean Server Name",
          "description": "Remove whitespace from server name",
          "parameters": {
            "operation": "trim",
            "input_text": "  PROD-WEB-01  "
          }
        },
        {
          "name": "Extract Domain",
          "description": "Extract domain from email address",
          "parameters": {
            "operation": "regex_match",
            "input_text": "user@example.com",
            "find_text": "@(.+)$"
          }
        }
      ]
    },
    {
      "name": "log_message",
      "display_name": "Log Message",
      "category": "Logging",
      "description": "Log messages with different severity levels",
      "icon": "\ud83d\udccb",
      "color": "#17a2b8",
      "inputs": 1,
      "outputs": 1,
      "parameters": {
        "message": {
          "type": "string",
          "required": true,
          "description": "Message to log",
          "validation": {
            "placeholder": "Operation completed successfully",
            "label": "Log Message"
          }
        },
        "level": {
          "type": "string",
          "default": "INFO",
          "description": "Severity level of the message",
          "options": [
            "DEBUG",
            "INFO",
            "WARNING",
            "ERROR",
            "CRITICAL"
          ],
          "validation": {
            "label": "Log Level"
          }
        },
        "include_timestamp": {
          "type": "boolean",
          "default": true,
          "description": "Add timestamp to the log message",
          "validation": {
            "label": "Include Timestamp"
          }
        },
        "include_variables": {
          "type": "boolean",
          "default": false,
          "description": "Include current variable values in log",
          "validation": {
            "label": "Include Variables"
          }
        }
      },
      "platform_support": [
        "windows",
        "linux",
        "macos"
      ],
      "required_permissions": [],
      "examples": [
        {
          "name": "Info Message",
          "description": "Log an informational message",
          "parameters": {
            "message": "Starting backup process",
            "level": "INFO",
            "include_timestamp": true
          }
        },
        {
          "name": "Error Message",
          "description": "Log an error with context",
          "parameters": {
            "message": "Failed to connect to database",
            "level": "ERROR",
            "include_variables": true
          }
        }
      ]
    }
  ]
}