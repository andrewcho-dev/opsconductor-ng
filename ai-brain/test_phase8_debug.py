#!/usr/bin/env python3
"""
üß™ PHASE 8: DEBUG TEST
Debug test to identify specific import issues.
"""

import sys
import traceback

def test_imports():
    """Test imports one by one to identify issues"""
    
    print("üîç Testing imports one by one...")
    
    # Test 1: Basic imports
    try:
        import asyncio
        import structlog
        from datetime import datetime
        from typing import Dict, List, Optional, Any, Union
        from dataclasses import dataclass, field
        from enum import Enum
        import json
        import uuid
        print("‚úÖ Basic imports: OK")
    except Exception as e:
        print(f"‚ùå Basic imports failed: {e}")
        return False
    
    # Test 2: Core system imports
    try:
        from integrations.thinking_llm_client import ThinkingLLMClient
        print("‚úÖ ThinkingLLMClient import: OK")
    except Exception as e:
        print(f"‚ùå ThinkingLLMClient import failed: {e}")
        traceback.print_exc()
    
    try:
        from integrations.llm_client import LLMEngine
        print("‚úÖ LLMEngine import: OK")
    except Exception as e:
        print(f"‚ùå LLMEngine import failed: {e}")
        traceback.print_exc()
    
    # Test 3: Phase imports
    try:
        from streaming.stream_manager import CentralStreamManager
        print("‚úÖ CentralStreamManager import: OK")
    except Exception as e:
        print(f"‚ùå CentralStreamManager import failed: {e}")
        traceback.print_exc()
    
    try:
        from decision.decision_engine import DecisionEngine
        print("‚úÖ DecisionEngine import: OK")
    except Exception as e:
        print(f"‚ùå DecisionEngine import failed: {e}")
        traceback.print_exc()
    
    try:
        from workflows.intelligent_workflow_generator import IntelligentWorkflowGenerator
        print("‚úÖ IntelligentWorkflowGenerator import: OK")
    except Exception as e:
        print(f"‚ùå IntelligentWorkflowGenerator import failed: {e}")
        traceback.print_exc()
    
    try:
        from workflows.adaptive_execution_engine import AdaptiveExecutionEngine
        print("‚úÖ AdaptiveExecutionEngine import: OK")
    except Exception as e:
        print(f"‚ùå AdaptiveExecutionEngine import failed: {e}")
        traceback.print_exc()
    
    try:
        from workflows.workflow_orchestrator import WorkflowOrchestrator
        print("‚úÖ WorkflowOrchestrator import: OK")
    except Exception as e:
        print(f"‚ùå WorkflowOrchestrator import failed: {e}")
        traceback.print_exc()
    
    try:
        from analysis.deductive_analysis_engine import DeductiveAnalysisEngine
        print("‚úÖ DeductiveAnalysisEngine import: OK")
    except Exception as e:
        print(f"‚ùå DeductiveAnalysisEngine import failed: {e}")
        traceback.print_exc()
    
    try:
        from conversation.conversation_memory_engine import ConversationMemoryEngine
        print("‚úÖ ConversationMemoryEngine import: OK")
    except Exception as e:
        print(f"‚ùå ConversationMemoryEngine import failed: {e}")
        traceback.print_exc()
    
    try:
        from conversation.clarification_intelligence import ClarificationIntelligence
        print("‚úÖ ClarificationIntelligence import: OK")
    except Exception as e:
        print(f"‚ùå ClarificationIntelligence import failed: {e}")
        traceback.print_exc()
    
    # Test 4: Service integrations
    try:
        from integrations.asset_client import AssetServiceClient
        print("‚úÖ AssetServiceClient import: OK")
    except Exception as e:
        print(f"‚ùå AssetServiceClient import failed: {e}")
        traceback.print_exc()
    
    try:
        from integrations.automation_client import AutomationServiceClient
        print("‚úÖ AutomationServiceClient import: OK")
    except Exception as e:
        print(f"‚ùå AutomationServiceClient import failed: {e}")
        traceback.print_exc()
    
    try:
        from integrations.network_client import NetworkAnalyzerClient
        print("‚úÖ NetworkAnalyzerClient import: OK")
    except Exception as e:
        print(f"‚ùå NetworkAnalyzerClient import failed: {e}")
        traceback.print_exc()
    
    try:
        from integrations.communication_client import CommunicationServiceClient
        print("‚úÖ CommunicationServiceClient import: OK")
    except Exception as e:
        print(f"‚ùå CommunicationServiceClient import failed: {e}")
        traceback.print_exc()
    
    try:
        from integrations.prefect_client import PrefectClient
        print("‚úÖ PrefectClient import: OK")
    except Exception as e:
        print(f"‚ùå PrefectClient import failed: {e}")
        traceback.print_exc()
    
    print("\nüîç Import testing complete")
    return True

if __name__ == "__main__":
    print("üß™ PHASE 8: DEBUG TEST - IMPORT ANALYSIS")
    print("=" * 60)
    test_imports()