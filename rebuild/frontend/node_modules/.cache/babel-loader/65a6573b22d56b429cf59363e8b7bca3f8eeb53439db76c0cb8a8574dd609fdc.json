{"ast":null,"code":"var _jsxFileName = \"/app/src/components/ServiceHealthMonitor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { healthApi } from '../services/api';\nimport { CheckCircle, Circle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceHealthMonitor = () => {\n  _s();\n  const [services, setServices] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  // Group services by category\n  const serviceGroups = {\n    'Core Services': ['auth', 'users', 'targets', 'jobs'],\n    'Processing': ['executor', 'celery-worker', 'celery-beat'],\n    'Infrastructure': ['nginx', 'frontend', 'redis', 'postgres'],\n    'Monitoring': ['notification', 'discovery', 'step-libraries', 'flower']\n  };\n  const fetchServiceHealth = async () => {\n    try {\n      const results = await healthApi.checkAllServices();\n      setServices(results);\n      setLastUpdate(new Date());\n    } catch (error) {\n      console.error('Failed to fetch service health:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchServiceHealth();\n    const interval = setInterval(fetchServiceHealth, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '11px',\n        color: '#666'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchServiceHealth,\n        style: {\n          background: 'none',\n          border: '1px solid #ddd',\n          padding: '2px 6px',\n          fontSize: '10px',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '10px',\n          color: '#666'\n        },\n        children: lastUpdate.toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '12px'\n      },\n      children: Object.entries(serviceGroups).map(([groupName, serviceList]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '11px',\n            fontWeight: '600',\n            color: '#374151',\n            marginBottom: '4px',\n            textTransform: 'uppercase',\n            letterSpacing: '0.5px'\n          },\n          children: groupName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))',\n            gap: '4px',\n            fontSize: '12px'\n          },\n          children: serviceList.map(serviceName => {\n            const status = services[serviceName];\n            if (!status) return null;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                padding: '3px 6px',\n                background: status.status === 'healthy' ? '#d1fae5' : '#fee2e2',\n                borderRadius: '3px',\n                border: '1px solid #e2e8f0',\n                minHeight: '24px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: '500',\n                  fontSize: '11px',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                  flex: 1\n                },\n                children: serviceName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '3px',\n                  marginLeft: '4px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: status.status === 'healthy' ? '#059669' : '#dc2626',\n                    fontSize: '12px'\n                  },\n                  children: status.status === 'healthy' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n                    size: 8\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 56\n                  }, this) : /*#__PURE__*/_jsxDEV(Circle, {\n                    size: 8\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 83\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this), status.responseTime && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '9px',\n                    color: '#666'\n                  },\n                  children: [status.responseTime, \"ms\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)]\n            }, serviceName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, groupName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ServiceHealthMonitor, \"vxg7RSfDDZ4kEqYd02OI6AC6dDs=\");\n_c = ServiceHealthMonitor;\nexport default ServiceHealthMonitor;\nvar _c;\n$RefreshReg$(_c, \"ServiceHealthMonitor\");","map":{"version":3,"names":["React","useState","useEffect","healthApi","CheckCircle","Circle","jsxDEV","_jsxDEV","ServiceHealthMonitor","_s","services","setServices","loading","setLoading","lastUpdate","setLastUpdate","serviceGroups","fetchServiceHealth","results","checkAllServices","Date","error","console","interval","setInterval","clearInterval","style","fontSize","color","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","marginBottom","onClick","background","border","padding","borderRadius","cursor","toLocaleTimeString","flexDirection","gap","Object","entries","map","groupName","serviceList","fontWeight","textTransform","letterSpacing","gridTemplateColumns","serviceName","status","minHeight","overflow","textOverflow","whiteSpace","flex","marginLeft","size","responseTime","_c","$RefreshReg$"],"sources":["/app/src/components/ServiceHealthMonitor.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { healthApi } from '../services/api';\nimport { CheckCircle, Circle } from 'lucide-react';\n\ninterface ServiceStatus {\n  status: string;\n  service: string;\n  responseTime?: number;\n  error?: string;\n}\n\nconst ServiceHealthMonitor: React.FC = () => {\n  const [services, setServices] = useState<Record<string, ServiceStatus>>({});\n  const [loading, setLoading] = useState(true);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n\n  // Group services by category\n  const serviceGroups = {\n    'Core Services': ['auth', 'users', 'targets', 'jobs'],\n    'Processing': ['executor', 'celery-worker', 'celery-beat'],\n    'Infrastructure': ['nginx', 'frontend', 'redis', 'postgres'],\n    'Monitoring': ['notification', 'discovery', 'step-libraries', 'flower']\n  };\n\n  const fetchServiceHealth = async () => {\n    try {\n      const results = await healthApi.checkAllServices();\n      setServices(results);\n      setLastUpdate(new Date());\n    } catch (error) {\n      console.error('Failed to fetch service health:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchServiceHealth();\n    const interval = setInterval(fetchServiceHealth, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading) {\n    return <div style={{ fontSize: '11px', color: '#666' }}>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '8px' }}>\n        <button \n          onClick={fetchServiceHealth}\n          style={{ \n            background: 'none', \n            border: '1px solid #ddd', \n            padding: '2px 6px', \n            fontSize: '10px',\n            borderRadius: '3px',\n            cursor: 'pointer'\n          }}\n        >\n          Refresh\n        </button>\n        {lastUpdate && (\n          <span style={{ fontSize: '10px', color: '#666' }}>\n            {lastUpdate.toLocaleTimeString()}\n          </span>\n        )}\n      </div>\n\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n        {Object.entries(serviceGroups).map(([groupName, serviceList]) => (\n          <div key={groupName}>\n            <div style={{ \n              fontSize: '11px', \n              fontWeight: '600', \n              color: '#374151', \n              marginBottom: '4px',\n              textTransform: 'uppercase',\n              letterSpacing: '0.5px'\n            }}>\n              {groupName}\n            </div>\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))', gap: '4px', fontSize: '12px' }}>\n              {serviceList.map((serviceName) => {\n                const status = services[serviceName];\n                if (!status) return null;\n                \n                return (\n                  <div \n                    key={serviceName}\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                      padding: '3px 6px',\n                      background: status.status === 'healthy' ? '#d1fae5' : '#fee2e2',\n                      borderRadius: '3px',\n                      border: '1px solid #e2e8f0',\n                      minHeight: '24px'\n                    }}\n                  >\n                    <span style={{ \n                      fontWeight: '500', \n                      fontSize: '11px',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap',\n                      flex: 1\n                    }}>\n                      {serviceName}\n                    </span>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '3px', marginLeft: '4px' }}>\n                      <span style={{ \n                        color: status.status === 'healthy' ? '#059669' : '#dc2626',\n                        fontSize: '12px'\n                      }}>\n                        {status.status === 'healthy' ? <CheckCircle size={8} /> : <Circle size={8} />}\n                      </span>\n                      {status.responseTime && (\n                        <span style={{ fontSize: '9px', color: '#666' }}>\n                          {status.responseTime}ms\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceHealthMonitor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}