{"ast":null,"code":"/**\n * Step Library Service\n * Manages dynamic loading of step libraries and their definitions\n */\n\nimport axios from 'axios';\nimport { getApiBaseUrl } from './api';\n\n// Create axios instance with authentication\nconst api = axios.create({\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add authentication\napi.interceptors.request.use(config => {\n  config.baseURL = getApiBaseUrl();\n\n  // Add access token if available\n  const accessToken = localStorage.getItem('access_token');\n  if (accessToken) {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Types\n\nclass StepLibraryService {\n  constructor() {\n    this.cache = new Map();\n    this.cacheTimeout = 5 * 60 * 1000;\n    // 5 minutes\n    this.listeners = new Set();\n  }\n  /**\n   * Get all available step definitions\n   */\n  async getAvailableSteps(category, library, platform, forceRefresh = false) {\n    const cacheKey = `steps_${category || 'all'}_${library || 'all'}_${platform || 'all'}`;\n\n    // Check cache first\n    if (!forceRefresh && this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey);\n      if (Date.now() - cached.timestamp < this.cacheTimeout) {\n        return cached.data;\n      }\n    }\n    try {\n      const params = new URLSearchParams();\n      if (category) params.append('category', category);\n      if (library) params.append('library', library);\n      if (platform) params.append('platform', platform);\n      const response = await api.get(`/api/v1/steps?${params.toString()}`);\n      const data = response.data;\n\n      // Cache the result\n      this.cache.set(cacheKey, {\n        data,\n        timestamp: Date.now()\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch step definitions:', error);\n\n      // Return fallback core steps if service is unavailable\n      return this.getFallbackSteps();\n    }\n  }\n\n  /**\n   * Get all installed libraries\n   */\n  async getInstalledLibraries(enabledOnly = false) {\n    const cacheKey = `libraries_${enabledOnly}`;\n\n    // Check cache\n    if (this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey);\n      if (Date.now() - cached.timestamp < this.cacheTimeout) {\n        return cached.data;\n      }\n    }\n    try {\n      const params = enabledOnly ? '?enabled_only=true' : '';\n      const response = await api.get(`/api/v1/libraries${params}`);\n      const data = response.data.libraries || [];\n\n      // Cache the result\n      this.cache.set(cacheKey, {\n        data,\n        timestamp: Date.now()\n      });\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch libraries:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Install a new library from file upload\n   */\n  async installLibrary(file, licenseKey) {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      if (licenseKey) {\n        formData.append('license_key', licenseKey);\n      }\n      const response = await api.post(`/api/v1/libraries`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Clear cache after installation\n      this.clearCache();\n      this.notifyListeners();\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Failed to install library:', error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Failed to install library');\n    }\n  }\n\n  /**\n   * Uninstall a library\n   */\n  async uninstallLibrary(libraryId) {\n    try {\n      await api.delete(`/api/v1/libraries/${libraryId}`);\n\n      // Clear cache after uninstallation\n      this.clearCache();\n      this.notifyListeners();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Failed to uninstall library:', error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to uninstall library');\n    }\n  }\n\n  /**\n   * Enable or disable a library\n   */\n  async toggleLibrary(libraryId, enabled) {\n    try {\n      await api.put(`/api/v1/libraries/${libraryId}`, null, {\n        params: {\n          enabled\n        }\n      });\n\n      // Clear cache after toggle\n      this.clearCache();\n      this.notifyListeners();\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Failed to toggle library:', error);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to toggle library');\n    }\n  }\n\n  /**\n   * Get library details\n   */\n  async getLibraryDetails(libraryId) {\n    try {\n      const response = await api.get(`/api/v1/libraries/${libraryId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch library details:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clear all cached data\n   */\n  clearCache() {\n    this.cache.clear();\n  }\n\n  /**\n   * Add a listener for library changes\n   */\n  addChangeListener(listener) {\n    this.listeners.add(listener);\n  }\n\n  /**\n   * Remove a change listener\n   */\n  removeChangeListener(listener) {\n    this.listeners.delete(listener);\n  }\n\n  /**\n   * Notify all listeners of changes\n   */\n  notifyListeners() {\n    this.listeners.forEach(listener => listener());\n  }\n\n  /**\n   * Get fallback steps when service is unavailable\n   */\n  getFallbackSteps() {\n    const fallbackSteps = [{\n      id: 'core.flow.start',\n      name: 'Start',\n      type: 'flow.start',\n      category: 'flow',\n      library: 'core',\n      library_id: 1,\n      icon: 'play',\n      description: 'Job start point',\n      color: '#28a745',\n      inputs: 0,\n      outputs: 1,\n      parameters: {},\n      platform_support: ['windows', 'linux', 'macos'],\n      required_permissions: [],\n      examples: [],\n      tags: ['flow', 'start']\n    }, {\n      id: 'core.flow.end',\n      name: 'End',\n      type: 'flow.end',\n      category: 'flow',\n      library: 'core',\n      library_id: 1,\n      icon: 'square',\n      description: 'Job end point',\n      color: '#dc3545',\n      inputs: 1,\n      outputs: 0,\n      parameters: {},\n      platform_support: ['windows', 'linux', 'macos'],\n      required_permissions: [],\n      examples: [],\n      tags: ['flow', 'end']\n    }, {\n      id: 'core.target.assign',\n      name: 'Target Assignment',\n      type: 'target.assign',\n      category: 'targets',\n      library: 'core',\n      library_id: 1,\n      icon: 'target',\n      description: 'Assign job execution to specific target',\n      color: '#28a745',\n      inputs: 1,\n      outputs: 1,\n      parameters: {\n        target_names: {\n          type: 'string',\n          required: true,\n          description: 'Target names (comma-separated)',\n          default: ''\n        }\n      },\n      platform_support: ['windows', 'linux', 'macos'],\n      required_permissions: [],\n      examples: [],\n      tags: ['target', 'assignment']\n    }];\n    return {\n      steps: fallbackSteps,\n      total_count: fallbackSteps.length,\n      categories: ['flow', 'targets'],\n      libraries: ['core']\n    };\n  }\n\n  /**\n   * Convert step definition to node template format for compatibility\n   */\n  convertToNodeTemplate(step) {\n    return {\n      id: step.id,\n      // Use unique step.id instead of step.type to avoid duplicates\n      name: step.name,\n      type: step.type,\n      category: step.category,\n      library: step.library,\n      icon: step.icon,\n      description: step.description,\n      inputs: step.inputs,\n      outputs: step.outputs,\n      defaultConfig: this.generateDefaultConfig(step.parameters),\n      color: step.color,\n      parameters: step.parameters\n    };\n  }\n\n  /**\n   * Generate default configuration from parameters\n   */\n  generateDefaultConfig(parameters) {\n    const config = {};\n    Object.entries(parameters).forEach(([key, param]) => {\n      if (param.default !== undefined) {\n        config[key] = param.default;\n      } else if (param.required) {\n        // Set appropriate default based on type\n        switch (param.type) {\n          case 'string':\n            config[key] = '';\n            break;\n          case 'number':\n            config[key] = 0;\n            break;\n          case 'boolean':\n            config[key] = false;\n            break;\n          case 'array':\n            config[key] = [];\n            break;\n          case 'object':\n            config[key] = {};\n            break;\n          default:\n            config[key] = null;\n        }\n      }\n    });\n    return config;\n  }\n\n  /**\n   * Check if step libraries service is available\n   */\n  async checkServiceHealth() {\n    try {\n      const response = await api.get('/api/v1/health', {\n        timeout: 5000\n      });\n      return response.status === 200;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n\n// Export singleton instance\nexport const stepLibraryService = new StepLibraryService();\nexport default stepLibraryService;","map":{"version":3,"names":["axios","getApiBaseUrl","api","create","headers","interceptors","request","use","config","baseURL","accessToken","localStorage","getItem","Authorization","error","Promise","reject","StepLibraryService","constructor","cache","Map","cacheTimeout","listeners","Set","getAvailableSteps","category","library","platform","forceRefresh","cacheKey","has","cached","get","Date","now","timestamp","data","params","URLSearchParams","append","response","toString","set","console","getFallbackSteps","getInstalledLibraries","enabledOnly","libraries","installLibrary","file","licenseKey","formData","FormData","post","clearCache","notifyListeners","_error$response","_error$response$data","Error","detail","uninstallLibrary","libraryId","delete","_error$response2","_error$response2$data","toggleLibrary","enabled","put","_error$response3","_error$response3$data","getLibraryDetails","clear","addChangeListener","listener","add","removeChangeListener","forEach","fallbackSteps","id","name","type","library_id","icon","description","color","inputs","outputs","parameters","platform_support","required_permissions","examples","tags","target_names","required","default","steps","total_count","length","categories","convertToNodeTemplate","step","defaultConfig","generateDefaultConfig","Object","entries","key","param","undefined","checkServiceHealth","timeout","status","stepLibraryService"],"sources":["/app/src/services/stepLibraryService.ts"],"sourcesContent":["/**\n * Step Library Service\n * Manages dynamic loading of step libraries and their definitions\n */\n\nimport axios from 'axios';\nimport { getApiBaseUrl } from './api';\n\n// Create axios instance with authentication\nconst api = axios.create({\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add authentication\napi.interceptors.request.use(\n  (config) => {\n    config.baseURL = getApiBaseUrl();\n    \n    // Add access token if available\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      config.headers.Authorization = `Bearer ${accessToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Types\nexport interface StepParameter {\n  type: string;\n  required: boolean;\n  default?: any;\n  description: string;\n  validation?: Record<string, any>;\n  options?: any[];\n}\n\nexport interface StepDefinition {\n  id: string;\n  name: string;\n  type: string;\n  category: string;\n  library: string;\n  library_id: number;\n  icon: string;\n  description: string;\n  color: string;\n  inputs: number;\n  outputs: number;\n  parameters: Record<string, StepParameter>;\n  platform_support: string[];\n  required_permissions: string[];\n  examples: any[];\n  tags: string[];\n}\n\nexport interface LibraryInfo {\n  id: number;\n  name: string;\n  version: string;\n  description: string;\n  manifest: Record<string, any>;\n  is_active: boolean;\n  is_builtin: boolean;\n  created_by: number;\n  created_at: string;\n  updated_at: string;\n  // Optional fields for backward compatibility\n  display_name?: string;\n  author?: string;\n  is_enabled?: boolean;\n  is_premium?: boolean;\n  installation_date?: string;\n  last_used?: string;\n  step_count?: number;\n  status?: string;\n}\n\nexport interface StepLibraryResponse {\n  steps: StepDefinition[];\n  total_count: number;\n  categories: string[];\n  libraries: string[];\n}\n\nexport interface LibraryInstallResult {\n  library_id: number;\n  name: string;\n  version: string;\n  step_count: number;\n  status: string;\n}\n\nclass StepLibraryService {\n  private cache: Map<string, any> = new Map();\n  private cacheTimeout = 5 * 60 * 1000; // 5 minutes\n  private listeners: Set<() => void> = new Set();\n\n  /**\n   * Get all available step definitions\n   */\n  async getAvailableSteps(\n    category?: string,\n    library?: string,\n    platform?: string,\n    forceRefresh = false\n  ): Promise<StepLibraryResponse> {\n    const cacheKey = `steps_${category || 'all'}_${library || 'all'}_${platform || 'all'}`;\n    \n    // Check cache first\n    if (!forceRefresh && this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey);\n      if (Date.now() - cached.timestamp < this.cacheTimeout) {\n        return cached.data;\n      }\n    }\n\n    try {\n      const params = new URLSearchParams();\n      if (category) params.append('category', category);\n      if (library) params.append('library', library);\n      if (platform) params.append('platform', platform);\n\n      const response = await api.get(\n        `/api/v1/steps?${params.toString()}`\n      );\n\n      const data: StepLibraryResponse = response.data;\n      \n      // Cache the result\n      this.cache.set(cacheKey, {\n        data,\n        timestamp: Date.now()\n      });\n\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch step definitions:', error);\n      \n      // Return fallback core steps if service is unavailable\n      return this.getFallbackSteps();\n    }\n  }\n\n  /**\n   * Get all installed libraries\n   */\n  async getInstalledLibraries(enabledOnly = false): Promise<LibraryInfo[]> {\n    const cacheKey = `libraries_${enabledOnly}`;\n    \n    // Check cache\n    if (this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey);\n      if (Date.now() - cached.timestamp < this.cacheTimeout) {\n        return cached.data;\n      }\n    }\n\n    try {\n      const params = enabledOnly ? '?enabled_only=true' : '';\n      const response = await api.get(\n        `/api/v1/libraries${params}`\n      );\n\n      const data: LibraryInfo[] = response.data.libraries || [];\n      \n      // Cache the result\n      this.cache.set(cacheKey, {\n        data,\n        timestamp: Date.now()\n      });\n\n      return data;\n    } catch (error) {\n      console.error('Failed to fetch libraries:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Install a new library from file upload\n   */\n  async installLibrary(file: File, licenseKey?: string): Promise<LibraryInstallResult> {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      if (licenseKey) {\n        formData.append('license_key', licenseKey);\n      }\n\n      const response = await api.post(\n        `/api/v1/libraries`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        }\n      );\n\n      // Clear cache after installation\n      this.clearCache();\n      this.notifyListeners();\n\n      return response.data;\n    } catch (error: any) {\n      console.error('Failed to install library:', error);\n      throw new Error(\n        error.response?.data?.detail || 'Failed to install library'\n      );\n    }\n  }\n\n  /**\n   * Uninstall a library\n   */\n  async uninstallLibrary(libraryId: number): Promise<void> {\n    try {\n      await api.delete(\n        `/api/v1/libraries/${libraryId}`\n      );\n\n      // Clear cache after uninstallation\n      this.clearCache();\n      this.notifyListeners();\n    } catch (error: any) {\n      console.error('Failed to uninstall library:', error);\n      throw new Error(\n        error.response?.data?.detail || 'Failed to uninstall library'\n      );\n    }\n  }\n\n  /**\n   * Enable or disable a library\n   */\n  async toggleLibrary(libraryId: number, enabled: boolean): Promise<void> {\n    try {\n      await api.put(\n        `/api/v1/libraries/${libraryId}`,\n        null,\n        {\n          params: { enabled }\n        }\n      );\n\n      // Clear cache after toggle\n      this.clearCache();\n      this.notifyListeners();\n    } catch (error: any) {\n      console.error('Failed to toggle library:', error);\n      throw new Error(\n        error.response?.data?.detail || 'Failed to toggle library'\n      );\n    }\n  }\n\n  /**\n   * Get library details\n   */\n  async getLibraryDetails(libraryId: number): Promise<any> {\n    try {\n      const response = await api.get(\n        `/api/v1/libraries/${libraryId}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch library details:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clear all cached data\n   */\n  clearCache(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * Add a listener for library changes\n   */\n  addChangeListener(listener: () => void): void {\n    this.listeners.add(listener);\n  }\n\n  /**\n   * Remove a change listener\n   */\n  removeChangeListener(listener: () => void): void {\n    this.listeners.delete(listener);\n  }\n\n  /**\n   * Notify all listeners of changes\n   */\n  private notifyListeners(): void {\n    this.listeners.forEach(listener => listener());\n  }\n\n  /**\n   * Get fallback steps when service is unavailable\n   */\n  private getFallbackSteps(): StepLibraryResponse {\n    const fallbackSteps: StepDefinition[] = [\n      {\n        id: 'core.flow.start',\n        name: 'Start',\n        type: 'flow.start',\n        category: 'flow',\n        library: 'core',\n        library_id: 1,\n        icon: 'play',\n        description: 'Job start point',\n        color: '#28a745',\n        inputs: 0,\n        outputs: 1,\n        parameters: {},\n        platform_support: ['windows', 'linux', 'macos'],\n        required_permissions: [],\n        examples: [],\n        tags: ['flow', 'start']\n      },\n      {\n        id: 'core.flow.end',\n        name: 'End',\n        type: 'flow.end',\n        category: 'flow',\n        library: 'core',\n        library_id: 1,\n        icon: 'square',\n        description: 'Job end point',\n        color: '#dc3545',\n        inputs: 1,\n        outputs: 0,\n        parameters: {},\n        platform_support: ['windows', 'linux', 'macos'],\n        required_permissions: [],\n        examples: [],\n        tags: ['flow', 'end']\n      },\n      {\n        id: 'core.target.assign',\n        name: 'Target Assignment',\n        type: 'target.assign',\n        category: 'targets',\n        library: 'core',\n        library_id: 1,\n        icon: 'target',\n        description: 'Assign job execution to specific target',\n        color: '#28a745',\n        inputs: 1,\n        outputs: 1,\n        parameters: {\n          target_names: {\n            type: 'string',\n            required: true,\n            description: 'Target names (comma-separated)',\n            default: ''\n          }\n        },\n        platform_support: ['windows', 'linux', 'macos'],\n        required_permissions: [],\n        examples: [],\n        tags: ['target', 'assignment']\n      }\n    ];\n\n    return {\n      steps: fallbackSteps,\n      total_count: fallbackSteps.length,\n      categories: ['flow', 'targets'],\n      libraries: ['core']\n    };\n  }\n\n  /**\n   * Convert step definition to node template format for compatibility\n   */\n  convertToNodeTemplate(step: StepDefinition): any {\n    return {\n      id: step.id,  // Use unique step.id instead of step.type to avoid duplicates\n      name: step.name,\n      type: step.type,\n      category: step.category,\n      library: step.library,\n      icon: step.icon,\n      description: step.description,\n      inputs: step.inputs,\n      outputs: step.outputs,\n      defaultConfig: this.generateDefaultConfig(step.parameters),\n      color: step.color,\n      parameters: step.parameters\n    };\n  }\n\n  /**\n   * Generate default configuration from parameters\n   */\n  private generateDefaultConfig(parameters: Record<string, StepParameter>): any {\n    const config: any = {};\n    \n    Object.entries(parameters).forEach(([key, param]) => {\n      if (param.default !== undefined) {\n        config[key] = param.default;\n      } else if (param.required) {\n        // Set appropriate default based on type\n        switch (param.type) {\n          case 'string':\n            config[key] = '';\n            break;\n          case 'number':\n            config[key] = 0;\n            break;\n          case 'boolean':\n            config[key] = false;\n            break;\n          case 'array':\n            config[key] = [];\n            break;\n          case 'object':\n            config[key] = {};\n            break;\n          default:\n            config[key] = null;\n        }\n      }\n    });\n\n    return config;\n  }\n\n  /**\n   * Check if step libraries service is available\n   */\n  async checkServiceHealth(): Promise<boolean> {\n    try {\n      const response = await api.get('/api/v1/health', {\n        timeout: 5000\n      });\n      return response.status === 200;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n\n// Export singleton instance\nexport const stepLibraryService = new StepLibraryService();\nexport default stepLibraryService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}