# Tool Optimization Profiles
# Version: 1.1 (FIXED: Time/Cost/Complexity now reflect TOTAL end-to-end metrics)
#
# This file defines optimization profiles for tool selection.
# Each tool can have multiple usage patterns with different performance characteristics.
#
# CRITICAL: All metrics represent TOTAL resources to deliver complete results:
# - time_estimate_ms: Total wall-clock time from request to final result
# - cost_estimate: Total API calls, SSH connections, or resource usage
# - complexity_score: Total orchestration complexity for entire operation
#
# Expressions support:
# - Variables: N (asset count), pages, p95_latency, cost, time_ms
# - Functions: log, log10, sqrt, min, max, abs, ceil, floor
# - Operators: +, -, *, /, //, %, **
#
# Scores (0.0-1.0):
# - 1.0 = Excellent for this dimension
# - 0.5 = Moderate
# - 0.0 = Poor for this dimension

version: "1.1"

tools:
  asset-query:
    description: "Query infrastructure asset metadata from centralized database"
    
    defaults:
      accuracy_level: "cached"
      freshness: "recent (5-15 min stale)"
      data_source: "database"
    
    capabilities:
      asset_query:
        patterns:
          count_aggregate:
            description: "Count assets matching criteria (fast aggregation)"
            typical_use_cases:
              - "how many"
              - "count"
              - "total"
              - "number of"
            
            # Performance estimates
            time_estimate_ms: "120 + 0.02 * N"  # ~120ms base + 0.02ms per asset
            cost_estimate: 1  # Single API call
            complexity_score: 0.1  # Very simple
            
            # Quality
            scope: "aggregated_count"
            completeness: "complete for cached data"
            
            # Limitations
            limitations:
              - "Data may be 5-15 minutes stale"
              - "No real-time verification"
            
            # Policy
            policy:
              max_cost: 10
              requires_approval: false
              production_safe: true
            
            # Preference matching (0-1 scale)
            preference_match:
              speed: 0.95        # Excellent speed
              accuracy: 0.6      # Moderate (cached data)
              cost: 0.95         # Very low cost
              complexity: 0.95   # Very simple
              completeness: 0.7  # Good for counts
          
          list_summary:
            description: "List assets with basic fields (paginated)"
            typical_use_cases:
              - "list"
              - "show"
              - "what are"
              - "get all"
            
            # Performance scales with result size and pagination
            time_estimate_ms: "200 + 2 * N + 500 * pages"
            cost_estimate: "1 + pages"  # One call per page
            complexity_score: 0.3
            
            # Quality
            scope: "summary_list"
            completeness: "basic fields only"
            
            # Limitations
            limitations:
              - "Limited fields returned"
              - "May require pagination for large result sets"
              - "Data may be stale"
            
            # Policy
            policy:
              max_N_immediate: 1000  # If N > 1000, suggest background
              max_cost: 50
              requires_approval: false
              production_safe: true
            
            # Preference matching
            preference_match:
              speed: 0.7
              accuracy: 0.6
              cost: 0.7
              complexity: 0.8
              completeness: 0.5  # Limited fields
          
          single_lookup:
            description: "Fast lookup of single asset by ID/hostname (N=1 only)"
            typical_use_cases:
              - "what is"
              - "get"
              - "find"
              - "IP of"
              - "hostname"
            
            # FIXED: Single API call only (get_asset_by_id or get_asset_by_hostname)
            # This pattern is ONLY suitable for N=1 queries
            # For N>1, use list_summary or detailed_lookup instead
            time_estimate_ms: 80  # Constant - single indexed lookup
            cost_estimate: 1      # Single API call
            complexity_score: 0.1 # Very simple - no iteration
            
            # Quality
            scope: "single_record"
            completeness: "complete for single asset"
            
            # Policy
            policy:
              max_cost: 5
              requires_approval: false
              production_safe: true
            
            # Preference matching
            preference_match:
              speed: 0.98        # Extremely fast
              accuracy: 0.6      # Cached
              cost: 0.98         # Very cheap
              complexity: 0.98   # Very simple
              completeness: 0.8  # Complete for one asset
          
          detailed_lookup:
            description: "Detailed asset information with all fields (batched query)"
            typical_use_cases:
              - "detailed"
              - "full information"
              - "everything about"
              - "complete details"
            
            # FIXED: Uses query_assets() with batching (100 assets per API call)
            # Total time = (API calls Ã— base latency) + (per-record processing)
            time_estimate_ms: "300 * ceil(N / 100) + 5 * N"
            cost_estimate: "ceil(N / 100)"  # One API call per 100 assets
            complexity_score: 0.4  # Moderate - batching logic
            
            # Quality
            scope: "detailed_records"
            completeness: "comprehensive (all fields)"
            
            # Limitations
            limitations:
              - "Slower due to large data transfer"
              - "May be stale"
              - "Batched in groups of 100"
            
            # Policy
            policy:
              max_N_immediate: 500
              max_cost: 30
              requires_approval: false
              production_safe: true
            
            # Preference matching
            preference_match:
              speed: 0.5         # Moderate speed
              accuracy: 0.6      # Cached
              cost: 0.6          # Moderate cost
              complexity: 0.6    # Moderate complexity
              completeness: 0.95 # Very complete
          
          csv_export:
            description: "Export all assets to CSV format for download/analysis"
            typical_use_cases:
              - "export"
              - "csv"
              - "download"
              - "spreadsheet"
              - "file"
              - "export to csv"
              - "download csv"
            
            # Performance - single API call to export endpoint
            time_estimate_ms: "250 + 3 * N"  # ~250ms base + 3ms per asset for CSV formatting
            cost_estimate: 1  # Single API call to /export/csv
            complexity_score: 0.2  # Simple - single endpoint call
            
            # Quality
            scope: "full_export"
            completeness: "comprehensive (all fields in CSV format)"
            
            # Limitations
            limitations:
              - "Data may be 5-15 minutes stale (cached)"
              - "Returns all assets (no filtering)"
              - "Large exports may take time to download"
            
            # Policy
            policy:
              max_N_immediate: 10000  # Can handle large exports
              max_cost: 10
              requires_approval: false
              production_safe: true
            
            # Preference matching
            preference_match:
              speed: 0.8         # Fast for exports
              accuracy: 0.6      # Cached data
              cost: 0.95         # Very low cost (single call)
              complexity: 0.9    # Very simple
              completeness: 1.0  # Complete export with all fields

  asset-direct-poll:
    description: "Poll assets directly via SSH/API for real-time information"
    
    defaults:
      accuracy_level: "realtime"
      freshness: "live (current state)"
      data_source: "direct_asset_poll"
    
    capabilities:
      live_asset_query:
        patterns:
          parallel_poll:
            description: "Poll multiple assets in parallel for current state"
            typical_use_cases:
              - "accurate"
              - "verify"
              - "exact"
              - "current"
              - "real-time"
            
            # Slow but accurate - scales logarithmically with parallelization
            time_estimate_ms: "3000 + 400 * log(max(N, 1)) + p95_latency * 1.2"
            cost_estimate: "N"  # One SSH/API call per asset
            complexity_score: 0.8  # Complex orchestration
            
            # Quality
            scope: "exhaustive"
            completeness: "comprehensive and current"
            
            # Limitations
            limitations:
              - "Slow for large asset counts"
              - "Requires SSH/API access to all assets"
              - "May fail on unreachable assets"
              - "High resource usage"
            
            # Policy - MUST use background for large N
            policy:
              max_N_immediate: 50  # Hard limit for immediate execution
              requires_approval: false
              requires_background_if: "N > 50"
              max_cost: 1000
              production_safe: true
            
            # Preference matching
            preference_match:
              speed: 0.2         # Very slow
              accuracy: 1.0      # Perfect accuracy
              cost: 0.1          # Very expensive
              complexity: 0.3    # Complex
              completeness: 1.0  # Fully complete
          
          single_asset_poll:
            description: "Poll single asset for current state"
            typical_use_cases:
              - "verify"
              - "check"
              - "current state of"
              - "is [asset] running"
            
            # Moderate speed for single asset
            time_estimate_ms: "5000 + p95_latency"
            cost_estimate: 1
            complexity_score: 0.4
            
            # Quality
            scope: "single_asset"
            completeness: "complete and current"
            
            # Limitations
            limitations:
              - "Requires SSH/API access"
              - "May fail if asset unreachable"
            
            # Policy
            policy:
              max_cost: 10
              requires_approval: false
              production_safe: true
            
            # Preference matching
            preference_match:
              speed: 0.5         # Moderate
              accuracy: 1.0      # Perfect
              cost: 0.7          # Low cost (single call)
              complexity: 0.6    # Moderate
              completeness: 0.95 # Very complete

  info_display:
    description: "Information display and help system"
    
    defaults:
      accuracy_level: "static"
      freshness: "static documentation"
      data_source: "documentation"
    
    capabilities:
      information:
        patterns:
          general_info:
            description: "Display general information and help"
            typical_use_cases:
              - "help"
              - "what is"
              - "explain"
              - "how do I"
            
            # Very fast - no external calls
            time_estimate_ms: 100
            cost_estimate: 0
            complexity_score: 0.1
            
            # Quality
            scope: "documentation"
            completeness: "informational only"
            
            # Policy
            policy:
              max_cost: 0
              requires_approval: false
              production_safe: true
            
            # Preference matching
            preference_match:
              speed: 1.0         # Instant
              accuracy: 0.5      # Static info
              cost: 1.0          # Free
              complexity: 1.0    # Very simple
              completeness: 0.4  # Limited to docs

  systemctl:
    description: "System service control and management"
    
    defaults:
      accuracy_level: "real-time"
      freshness: "current"
      data_source: "systemd"
    
    capabilities:
      service_control:
        patterns:
          restart_service:
            description: "Restart a system service"
            typical_use_cases:
              - "restart"
              - "reload"
              - "restart service"
            
            time_estimate_ms: 2000
            cost_estimate: 1
            complexity_score: 0.3
            
            scope: "single_service"
            completeness: "complete"
            
            limitations:
              - "Requires admin permissions"
              - "May cause service downtime"
            
            policy:
              max_cost: 5
              requires_approval: true
              production_safe: true
            
            preference_match:
              speed: 0.8
              accuracy: 1.0
              cost: 0.9
              complexity: 0.7
              completeness: 1.0
      
      service_status:
        patterns:
          check_status:
            description: "Check service status"
            typical_use_cases:
              - "status"
              - "check"
              - "is running"
            
            time_estimate_ms: 500
            cost_estimate: 1
            complexity_score: 0.1
            
            scope: "single_service"
            completeness: "complete"
            
            policy:
              max_cost: 5
              requires_approval: false
              production_safe: true
            
            preference_match:
              speed: 0.95
              accuracy: 1.0
              cost: 0.95
              complexity: 0.95
              completeness: 1.0

  ps:
    description: "Process status and monitoring"
    
    defaults:
      accuracy_level: "real-time"
      freshness: "current"
      data_source: "proc_filesystem"
    
    capabilities:
      system_monitoring:
        patterns:
          list_processes:
            description: "List running processes"
            typical_use_cases:
              - "list processes"
              - "show processes"
              - "what's running"
            
            time_estimate_ms: 300
            cost_estimate: 1
            complexity_score: 0.1
            
            scope: "all_processes"
            completeness: "complete"
            
            policy:
              max_cost: 5
              requires_approval: false
              production_safe: true
            
            preference_match:
              speed: 0.95
              accuracy: 1.0
              cost: 0.95
              complexity: 0.95
              completeness: 1.0

  journalctl:
    description: "System log access and analysis"
    
    defaults:
      accuracy_level: "real-time"
      freshness: "current"
      data_source: "systemd_journal"
    
    capabilities:
      log_access:
        patterns:
          view_logs:
            description: "View system or service logs"
            typical_use_cases:
              - "logs"
              - "show logs"
              - "view logs"
            
            time_estimate_ms: 1000
            cost_estimate: 1
            complexity_score: 0.2
            
            scope: "system_logs"
            completeness: "complete"
            
            policy:
              max_cost: 10
              requires_approval: false
              production_safe: true
            
            preference_match:
              speed: 0.85
              accuracy: 1.0
              cost: 0.9
              complexity: 0.85
              completeness: 1.0

  config_manager:
    description: "Configuration file management"
    
    defaults:
      accuracy_level: "real-time"
      freshness: "current"
      data_source: "filesystem"
    
    capabilities:
      configuration_management:
        patterns:
          edit_config:
            description: "Edit configuration files"
            typical_use_cases:
              - "edit config"
              - "update configuration"
              - "change settings"
            
            time_estimate_ms: 1500
            cost_estimate: 2
            complexity_score: 0.4
            
            scope: "single_file"
            completeness: "complete"
            
            limitations:
              - "Requires file system access"
              - "May require admin permissions"
            
            policy:
              max_cost: 10
              requires_approval: true
              production_safe: true
            
            preference_match:
              speed: 0.75
              accuracy: 1.0
              cost: 0.85
              complexity: 0.7
              completeness: 1.0

  asset-credentials-read:
    description: "Retrieve asset credentials (SSH keys, passwords, API tokens) - GATED ACCESS"
    
    defaults:
      accuracy_level: "real-time"
      freshness: "current"
      data_source: "credential_vault"
    
    capabilities:
      credential_access:
        patterns:
          retrieve_credentials:
            description: "Retrieve credentials for infrastructure assets"
            typical_use_cases:
              - "get credentials"
              - "what credentials"
              - "show password"
              - "SSH key"
              - "API token"
            
            time_estimate_ms: 500
            cost_estimate: 1
            complexity_score: 0.2
            
            scope: "single_asset_credentials"
            completeness: "complete"
            
            limitations:
              - "Requires ADMIN permissions"
              - "Requires justification"
              - "Audit logged"
            
            policy:
              max_cost: 5
              requires_approval: false
              production_safe: true
            
            preference_match:
              speed: 0.85
              accuracy: 1.0
              cost: 0.9
              complexity: 0.8
              completeness: 1.0
      
      secret_retrieval:
        patterns:
          retrieve_secrets:
            description: "Access secrets and sensitive configuration"
            typical_use_cases:
              - "get secret"
              - "retrieve token"
              - "access credentials"
              - "communication credentials"
            
            time_estimate_ms: 500
            cost_estimate: 1
            complexity_score: 0.2
            
            scope: "asset_secrets"
            completeness: "complete"
            
            limitations:
              - "Requires ADMIN permissions"
              - "Requires justification"
              - "Audit logged"
            
            policy:
              max_cost: 5
              requires_approval: false
              production_safe: true
            
            preference_match:
              speed: 0.85
              accuracy: 1.0
              cost: 0.9
              complexity: 0.8
              completeness: 1.0