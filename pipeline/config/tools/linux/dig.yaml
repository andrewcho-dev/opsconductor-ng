# dig - DNS lookup utility
tool_name: "dig"
version: "1.0"
description: "Advanced DNS lookup utility for querying DNS name servers with detailed response information"
platform: "linux"
category: "network"

defaults:
  accuracy_level: "real-time"
  freshness: "live"
  data_source: "dns"

capabilities:
  dns_query:
    description: "Perform DNS queries for various record types with detailed diagnostic information"
    
    patterns:
      lookup_a_record:
        description: "Query DNS A record (IPv4 address) for hostname"
        
        typical_use_cases:
          - "resolve hostname to IP"
          - "DNS lookup"
          - "find IP address of domain"
          - "check DNS resolution"
          - "verify A record"
          - "troubleshoot DNS"
        
        time_estimate_ms: "200 + dns_latency"
        cost_estimate: "1"
        complexity_score: 0.1
        
        scope: "single_item"
        completeness: "complete"
        
        limitations:
          - "Requires working DNS resolver"
          - "Results depend on DNS server configuration"
          - "May be affected by DNS caching"
          - "Timeout if DNS server unreachable"
        
        policy:
          max_cost: 2
          requires_approval: false
          production_safe: true
          max_execution_time: 15
        
        preference_match:
          speed: 0.95
          accuracy: 1.0
          cost: 0.95
          complexity: 0.95
          completeness: 1.0
        
        required_inputs:
          - name: "domain"
            type: "string"
            description: "Domain name or hostname to resolve. Examples: 'example.com', 'www.google.com', 'api.service.local'"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*\\.[a-zA-Z]{2,}$|^[a-zA-Z0-9][a-zA-Z0-9.-]*$"
            examples:
              - "example.com"
              - "www.google.com"
              - "api.example.com"
              - "web-server-01.local"
          - name: "host"
            type: "string"
            description: "Host from which to execute dig command"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*$|^\\d{1,3}(\\.\\d{1,3}){3}$"
            examples:
              - "bastion-host"
              - "192.168.1.100"
        
        optional_inputs:
          - name: "dns_server"
            type: "string"
            description: "Specific DNS server to query (IP or hostname). Omit to use system default resolver"
            default: ""
            examples:
              - "8.8.8.8"
              - "1.1.1.1"
              - "dns.google"
          - name: "timeout_seconds"
            type: "integer"
            description: "Query timeout in seconds"
            default: 5
            examples:
              - 2
              - 5
              - 10
          - name: "short_output"
            type: "boolean"
            description: "Return only the IP address (dig +short)"
            default: "false"
        
        expected_outputs:
          - name: "ip_addresses"
            type: "array"
            description: "List of IPv4 addresses resolved"
          - name: "query_time_ms"
            type: "integer"
            description: "DNS query time in milliseconds"
          - name: "dns_server_used"
            type: "string"
            description: "DNS server that answered the query"
          - name: "ttl"
            type: "integer"
            description: "Time-to-live value from DNS record"
          - name: "authoritative"
            type: "boolean"
            description: "Whether response was authoritative"
      
      lookup_record_type:
        description: "Query specific DNS record type (MX, TXT, CNAME, AAAA, etc.)"
        
        typical_use_cases:
          - "check MX records for email"
          - "verify TXT records"
          - "lookup CNAME alias"
          - "find IPv6 address (AAAA)"
          - "check NS nameservers"
          - "verify SPF records"
          - "lookup SRV service records"
        
        time_estimate_ms: "250 + dns_latency"
        cost_estimate: "1"
        complexity_score: 0.2
        
        scope: "single_item"
        completeness: "complete"
        
        limitations:
          - "Record type must exist for domain"
          - "Some record types require specific DNS server"
          - "DNSSEC validation may fail"
        
        policy:
          max_cost: 2
          requires_approval: false
          production_safe: true
          max_execution_time: 15
        
        preference_match:
          speed: 0.9
          accuracy: 1.0
          cost: 0.95
          complexity: 0.9
          completeness: 1.0
        
        required_inputs:
          - name: "domain"
            type: "string"
            description: "Domain name to query"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*\\.[a-zA-Z]{2,}$|^[a-zA-Z0-9][a-zA-Z0-9.-]*$"
            examples:
              - "example.com"
              - "mail.example.com"
          - name: "record_type"
            type: "string"
            description: "DNS record type to query"
            allowed_values:
              - "A"
              - "AAAA"
              - "MX"
              - "TXT"
              - "CNAME"
              - "NS"
              - "SOA"
              - "PTR"
              - "SRV"
              - "CAA"
            examples:
              - "MX"
              - "TXT"
              - "AAAA"
          - name: "host"
            type: "string"
            description: "Host from which to execute query"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*$|^\\d{1,3}(\\.\\d{1,3}){3}$"
        
        optional_inputs:
          - name: "dns_server"
            type: "string"
            description: "Specific DNS server to query"
            default: ""
            examples:
              - "8.8.8.8"
              - "ns1.example.com"
          - name: "show_details"
            type: "boolean"
            description: "Include full DNS response details"
            default: "true"
        
        expected_outputs:
          - name: "records"
            type: "array"
            description: "List of DNS records found"
          - name: "record_count"
            type: "integer"
            description: "Number of records returned"
          - name: "query_time_ms"
            type: "integer"
            description: "Query response time"
      
      reverse_lookup:
        description: "Perform reverse DNS lookup (PTR record) from IP address"
        
        typical_use_cases:
          - "find hostname from IP"
          - "reverse DNS lookup"
          - "verify PTR record"
          - "identify server by IP"
          - "check reverse DNS configuration"
        
        time_estimate_ms: "300 + dns_latency"
        cost_estimate: "1"
        complexity_score: 0.2
        
        scope: "single_item"
        completeness: "complete"
        
        limitations:
          - "PTR record must be configured"
          - "Not all IPs have reverse DNS"
          - "May require authoritative DNS server"
        
        policy:
          max_cost: 2
          requires_approval: false
          production_safe: true
          max_execution_time: 15
        
        preference_match:
          speed: 0.9
          accuracy: 1.0
          cost: 0.95
          complexity: 0.9
          completeness: 1.0
        
        required_inputs:
          - name: "ip_address"
            type: "string"
            description: "IP address for reverse lookup (IPv4 or IPv6)"
            validation: "^\\d{1,3}(\\.\\d{1,3}){3}$|^([0-9a-fA-F]{0,4}:){2,7}[0-9a-fA-F]{0,4}$"
            examples:
              - "8.8.8.8"
              - "192.168.1.100"
              - "2001:4860:4860::8888"
          - name: "host"
            type: "string"
            description: "Host from which to execute query"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*$|^\\d{1,3}(\\.\\d{1,3}){3}$"
        
        optional_inputs:
          - name: "dns_server"
            type: "string"
            description: "DNS server to query"
            default: ""
        
        expected_outputs:
          - name: "hostname"
            type: "string"
            description: "Resolved hostname"
          - name: "has_ptr"
            type: "boolean"
            description: "Whether PTR record exists"
      
      trace_dns_path:
        description: "Trace DNS delegation path from root to authoritative nameserver"
        
        typical_use_cases:
          - "troubleshoot DNS delegation"
          - "verify nameserver chain"
          - "debug DNS resolution"
          - "check DNS propagation"
          - "audit DNS configuration"
        
        time_estimate_ms: "1000 + dns_latency * 5"
        cost_estimate: "2"
        complexity_score: 0.4
        
        scope: "exhaustive"
        completeness: "complete"
        
        limitations:
          - "Requires multiple DNS queries"
          - "Slower than direct lookup"
          - "May timeout on complex delegations"
        
        policy:
          max_cost: 3
          requires_approval: false
          production_safe: true
          max_execution_time: 30
        
        preference_match:
          speed: 0.7
          accuracy: 1.0
          cost: 0.85
          complexity: 0.75
          completeness: 1.0
        
        required_inputs:
          - name: "domain"
            type: "string"
            description: "Domain to trace"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*\\.[a-zA-Z]{2,}$"
            examples:
              - "example.com"
              - "subdomain.example.com"
          - name: "host"
            type: "string"
            description: "Host from which to execute trace"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*$|^\\d{1,3}(\\.\\d{1,3}){3}$"
        
        expected_outputs:
          - name: "delegation_path"
            type: "array"
            description: "Chain of nameservers from root to authoritative"
          - name: "authoritative_servers"
            type: "array"
            description: "Final authoritative nameservers"
          - name: "total_hops"
            type: "integer"
            description: "Number of delegation hops"

dependencies:
  - name: "network_access"
    type: "permission"
    required: true
  - name: "bind-utils"
    type: "package"
    required: true
    version: ">=9.9"

metadata:
  author: "OpsConductor Team"
  created: "2025-01-15"
  updated: "2025-01-15"
  tags:
    - "linux"
    - "network"
    - "dns"
    - "lookup"
    - "troubleshooting"
  documentation_url: "https://man.cx/dig"
  related_tools:
    - "nslookup"
    - "host"
    - "whois"

examples:
  - name: "Resolve domain to IP"
    description: "Simple DNS lookup to get IP address"
    inputs:
      domain: "www.google.com"
      host: "bastion-host"
      short_output: true
    expected_time_ms: 300
    expected_cost: 1
  
  - name: "Check MX records"
    description: "Find mail servers for domain"
    inputs:
      domain: "example.com"
      record_type: "MX"
      host: "monitoring-server"
      show_details: true
    expected_time_ms: 350
    expected_cost: 1
  
  - name: "Verify TXT records"
    description: "Check SPF and other TXT records"
    inputs:
      domain: "example.com"
      record_type: "TXT"
      host: "bastion-host"
    expected_time_ms: 350
    expected_cost: 1
  
  - name: "Query specific DNS server"
    description: "Use Google DNS to resolve domain"
    inputs:
      domain: "api.example.com"
      host: "app-server-01"
      dns_server: "8.8.8.8"
      timeout_seconds: 5
    expected_time_ms: 400
    expected_cost: 1
  
  - name: "Reverse DNS lookup"
    description: "Find hostname from IP address"
    inputs:
      ip_address: "8.8.8.8"
      host: "bastion-host"
    expected_time_ms: 400
    expected_cost: 1
  
  - name: "Trace DNS delegation"
    description: "Debug DNS resolution path"
    inputs:
      domain: "subdomain.example.com"
      host: "monitoring-server"
    expected_time_ms: 1500
    expected_cost: 2