# chmod - Change file permissions
tool_name: "chmod"
version: "1.0"
description: "Change file access permissions using symbolic or numeric modes"
platform: "linux"
category: "security"

defaults:
  accuracy_level: "real-time"
  freshness: "live"
  data_source: "filesystem"

capabilities:
  permission_management:
    description: "Modify file and directory permissions for user, group, and others"
    
    patterns:
      set_numeric_permissions:
        description: "Set permissions using numeric (octal) mode"
        
        typical_use_cases:
          - "change file permissions"
          - "set file mode"
          - "chmod 755"
          - "make file executable"
          - "secure file permissions"
          - "fix permission issues"
        
        time_estimate_ms: "150 + 50 * num_files"
        cost_estimate: "2"
        complexity_score: 0.3
        
        scope: "single_item"
        completeness: "complete"
        
        limitations:
          - "Requires write permission on file or ownership"
          - "May require sudo for system files"
          - "Does not modify ACLs or SELinux contexts"
          - "Symbolic links not followed by default"
          - "Cannot set permissions on read-only filesystems"
        
        policy:
          max_cost: 5
          requires_approval: true
          production_safe: false
          max_execution_time: 30
        
        preference_match:
          speed: 0.9
          accuracy: 1.0
          cost: 0.85
          complexity: 0.85
          completeness: 1.0
        
        required_inputs:
          - name: "path"
            type: "string"
            description: "File or directory path to modify permissions. Can be absolute or relative path"
            validation: ".*"
            examples:
              - "/var/www/html/index.html"
              - "/home/user/script.sh"
              - "/etc/nginx/nginx.conf"
              - "."
          - name: "mode"
            type: "string"
            description: "Numeric permission mode in octal (3 or 4 digits). Format: [special]user group other. Examples: '755' (rwxr-xr-x), '644' (rw-r--r--), '600' (rw-------), '4755' (rwsr-xr-x with SUID)"
            validation: "^[0-7]{3,4}$"
            examples:
              - "755"
              - "644"
              - "600"
              - "700"
              - "4755"
          - name: "host"
            type: "string"
            description: "Target host where chmod will be executed"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*$|^\\d{1,3}(\\.\\d{1,3}){3}$"
            examples:
              - "web-server-01"
              - "192.168.1.100"
        
        optional_inputs:
          - name: "recursive"
            type: "boolean"
            description: "Apply permissions recursively to directories and contents (chmod -R)"
            default: "false"
          - name: "verbose"
            type: "boolean"
            description: "Show detailed output of changes made"
            default: "false"
          - name: "preserve_root"
            type: "boolean"
            description: "Prevent recursive operation on root directory (safety feature)"
            default: "true"
        
        expected_outputs:
          - name: "success"
            type: "boolean"
            description: "Whether operation completed successfully"
          - name: "files_modified"
            type: "integer"
            description: "Number of files/directories modified"
          - name: "changes"
            type: "array"
            description: "List of files modified with old and new permissions"
      
      set_symbolic_permissions:
        description: "Set permissions using symbolic mode (u/g/o +/-/= r/w/x)"
        
        typical_use_cases:
          - "add execute permission"
          - "remove write access"
          - "grant group read access"
          - "make script executable"
          - "revoke permissions"
        
        time_estimate_ms: "150 + 50 * num_files"
        cost_estimate: "2"
        complexity_score: 0.3
        
        scope: "single_item"
        completeness: "complete"
        
        limitations:
          - "Symbolic mode relative to current permissions"
          - "Complex expressions may be confusing"
          - "Cannot set all permissions in one command easily"
        
        policy:
          max_cost: 5
          requires_approval: true
          production_safe: false
          max_execution_time: 30
        
        preference_match:
          speed: 0.9
          accuracy: 1.0
          cost: 0.85
          complexity: 0.8
          completeness: 1.0
        
        required_inputs:
          - name: "path"
            type: "string"
            description: "File or directory path"
            validation: ".*"
            examples:
              - "/home/user/script.sh"
              - "/var/www/uploads"
          - name: "symbolic_mode"
            type: "string"
            description: "Symbolic permission mode. Format: [ugoa][+-=][rwxXst]. Examples: 'u+x' (add execute for user), 'go-w' (remove write for group/others), 'a+r' (add read for all)"
            validation: "^[ugoa]*[+=-][rwxXst]+$"
            examples:
              - "u+x"
              - "go-w"
              - "a+r"
              - "u=rwx,go=rx"
              - "o-rwx"
          - name: "host"
            type: "string"
            description: "Target host for operation"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*$|^\\d{1,3}(\\.\\d{1,3}){3}$"
        
        optional_inputs:
          - name: "recursive"
            type: "boolean"
            description: "Apply recursively"
            default: "false"
        
        expected_outputs:
          - name: "success"
            type: "boolean"
            description: "Operation success status"
          - name: "files_modified"
            type: "integer"
            description: "Number of files changed"
      
      set_special_permissions:
        description: "Set special permissions (SUID, SGID, sticky bit)"
        
        typical_use_cases:
          - "set SUID bit"
          - "set SGID on directory"
          - "set sticky bit"
          - "configure shared directories"
          - "security configuration"
        
        time_estimate_ms: "200"
        cost_estimate: "3"
        complexity_score: 0.4
        
        scope: "single_item"
        completeness: "complete"
        
        limitations:
          - "SUID/SGID have security implications"
          - "Not all filesystems support special bits"
          - "Requires elevated privileges"
        
        policy:
          max_cost: 5
          requires_approval: true
          production_safe: false
          max_execution_time: 20
        
        preference_match:
          speed: 0.9
          accuracy: 1.0
          cost: 0.8
          complexity: 0.75
          completeness: 1.0
        
        required_inputs:
          - name: "path"
            type: "string"
            description: "File or directory path"
            validation: ".*"
            examples:
              - "/usr/bin/sudo"
              - "/tmp"
              - "/var/shared"
          - name: "special_bit"
            type: "string"
            description: "Special permission to set"
            allowed_values:
              - "suid"
              - "sgid"
              - "sticky"
            examples:
              - "suid"
              - "sticky"
          - name: "host"
            type: "string"
            description: "Target host"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*$|^\\d{1,3}(\\.\\d{1,3}){3}$"
        
        optional_inputs:
          - name: "base_permissions"
            type: "string"
            description: "Base permissions to set along with special bit (e.g., '755')"
            default: ""
            examples:
              - "755"
              - "775"
        
        expected_outputs:
          - name: "success"
            type: "boolean"
            description: "Whether special bit was set"
          - name: "final_mode"
            type: "string"
            description: "Final permission mode"
      
      bulk_permission_fix:
        description: "Fix permissions for multiple files matching pattern"
        
        typical_use_cases:
          - "fix web directory permissions"
          - "secure configuration files"
          - "standardize permissions"
          - "batch permission updates"
        
        time_estimate_ms: "500 + 100 * num_files"
        cost_estimate: "3"
        complexity_score: 0.4
        
        scope: "batch"
        completeness: "complete"
        
        limitations:
          - "Can affect many files"
          - "Requires careful pattern matching"
          - "May take time for large directories"
        
        policy:
          max_cost: 8
          requires_approval: true
          production_safe: false
          max_execution_time: 120
        
        preference_match:
          speed: 0.75
          accuracy: 1.0
          cost: 0.75
          complexity: 0.7
          completeness: 1.0
        
        required_inputs:
          - name: "directory"
            type: "string"
            description: "Base directory to search"
            validation: "^/.*"
            examples:
              - "/var/www/html"
              - "/etc/nginx"
          - name: "file_mode"
            type: "string"
            description: "Permission mode for files"
            validation: "^[0-7]{3,4}$"
            examples:
              - "644"
              - "640"
          - name: "dir_mode"
            type: "string"
            description: "Permission mode for directories"
            validation: "^[0-7]{3,4}$"
            examples:
              - "755"
              - "750"
          - name: "host"
            type: "string"
            description: "Target host"
            validation: "^[a-zA-Z0-9][a-zA-Z0-9.-]*$|^\\d{1,3}(\\.\\d{1,3}){3}$"
        
        optional_inputs:
          - name: "file_pattern"
            type: "string"
            description: "File name pattern to match (e.g., '*.conf', '*.php')"
            default: "*"
            examples:
              - "*.conf"
              - "*.php"
              - "*.sh"
        
        expected_outputs:
          - name: "files_modified"
            type: "integer"
            description: "Number of files changed"
          - name: "dirs_modified"
            type: "integer"
            description: "Number of directories changed"
          - name: "summary"
            type: "object"
            description: "Summary of changes made"

dependencies:
  - name: "filesystem_access"
    type: "permission"
    required: true
  - name: "coreutils"
    type: "package"
    required: true
    version: ">=8.0"

metadata:
  author: "OpsConductor Team"
  created: "2025-01-15"
  updated: "2025-01-15"
  tags:
    - "linux"
    - "security"
    - "permissions"
    - "filesystem"
    - "access-control"
  documentation_url: "https://man7.org/linux/man-pages/man1/chmod.1.html"
  related_tools:
    - "chown"
    - "chgrp"
    - "ls"
    - "stat"

examples:
  - name: "Make script executable"
    description: "Add execute permission for user on shell script"
    inputs:
      path: "/home/user/deploy.sh"
      symbolic_mode: "u+x"
      host: "app-server-01"
    expected_time_ms: 150
    expected_cost: 2
  
  - name: "Secure configuration file"
    description: "Set restrictive permissions on config file"
    inputs:
      path: "/etc/app/config.yml"
      mode: "600"
      host: "app-server-01"
      verbose: true
    expected_time_ms: 150
    expected_cost: 2
  
  - name: "Fix web directory permissions"
    description: "Set standard permissions for web files and directories"
    inputs:
      directory: "/var/www/html"
      file_mode: "644"
      dir_mode: "755"
      host: "web-server-01"
    expected_time_ms: 2000
    expected_cost: 3
  
  - name: "Set sticky bit on shared directory"
    description: "Configure shared directory with sticky bit"
    inputs:
      path: "/var/shared"
      special_bit: "sticky"
      base_permissions: "1777"
      host: "file-server"
    expected_time_ms: 200
    expected_cost: 3
  
  - name: "Secure SSH private key"
    description: "Set proper permissions on SSH private key"
    inputs:
      path: "/home/user/.ssh/id_rsa"
      mode: "600"
      host: "bastion-host"
    expected_time_ms: 150
    expected_cost: 2