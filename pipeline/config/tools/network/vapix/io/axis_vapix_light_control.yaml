# Axis VAPIX Light Control - Control camera IR/white light via VAPIX API
tool_name: Axis-VAPIX-Light-Control
version: '1.0'
description: |
  Control Axis camera IR illuminator and white light via VAPIX API.
  Supports on/off control and intensity adjustment.
platform: network
category: network
defaults:
  accuracy_level: real-time
  freshness: live
  data_source: direct
  protocol: http
  path: /axis-cgi/param.cgi
  auth_type: digest
  method: GET
capabilities:
  control_ir_light:
    description: Control IR illuminator
    patterns:
      turn_on_ir:
        description: Turn on IR illuminator
        typical_use_cases:
        - turn on ir light
        - enable infrared
        - activate ir illuminator
        - turn on night vision light
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.3
        scope: single_item
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 10
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.8
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with operator or administrator privileges
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "update"
          ImageSource.I0.DayNight.IrCutFilter: "off"
          Properties.Image.I0.Appearance.IRLight.Enabled: "yes"
        example_request: "GET http://{host}/axis-cgi/param.cgi?action=update&ImageSource.I0.DayNight.IrCutFilter=off&Properties.Image.I0.Appearance.IRLight.Enabled=yes"
      turn_off_ir:
        description: Turn off IR illuminator
        typical_use_cases:
        - turn off ir light
        - disable infrared
        - deactivate ir illuminator
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.3
        scope: single_item
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 10
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.8
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with operator or administrator privileges
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "update"
          Properties.Image.I0.Appearance.IRLight.Enabled: "no"
        example_request: "GET http://{host}/axis-cgi/param.cgi?action=update&Properties.Image.I0.Appearance.IRLight.Enabled=no"
      set_ir_intensity:
        description: Set IR illuminator intensity level
        typical_use_cases:
        - set ir intensity
        - adjust ir brightness
        - change ir light level
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.3
        scope: single_item
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 10
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.8
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with operator or administrator privileges
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        - name: intensity
          type: integer
          description: |
            IR illuminator intensity level.
            
            VALUE MEANINGS:
            - Range: 0-100
            - 0: Off
            - 50: Medium intensity
            - 100: Maximum intensity
            
            WHEN TO USE:
            - Higher intensity for longer range
            - Lower intensity to reduce glare/overexposure
            
            EXAMPLES:
            - 50 - Medium intensity
            - 75 - High intensity
            - 100 - Maximum intensity
          validation: ^([0-9]|[1-9][0-9]|100)$
        api_parameters:
          action: "update"
          Properties.Image.I0.Appearance.IRLight.Intensity: "{intensity}"
        example_request: "GET http://{host}/axis-cgi/param.cgi?action=update&Properties.Image.I0.Appearance.IRLight.Intensity={intensity}"
  control_white_light:
    description: Control white light illuminator
    patterns:
      turn_on_white_light:
        description: Turn on white light
        typical_use_cases:
        - turn on white light
        - enable white light
        - activate white illuminator
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.3
        scope: single_item
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 10
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.8
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with operator or administrator privileges
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "update"
          Properties.Image.I0.Appearance.WhiteLight.Enabled: "yes"
        example_request: "GET http://{host}/axis-cgi/param.cgi?action=update&Properties.Image.I0.Appearance.WhiteLight.Enabled=yes"
      turn_off_white_light:
        description: Turn off white light
        typical_use_cases:
        - turn off white light
        - disable white light
        - deactivate white illuminator
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.3
        scope: single_item
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 10
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.8
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with operator or administrator privileges
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "update"
          Properties.Image.I0.Appearance.WhiteLight.Enabled: "no"
        example_request: "GET http://{host}/axis-cgi/param.cgi?action=update&Properties.Image.I0.Appearance.WhiteLight.Enabled=no"
  get_light_status:
    description: Get current light status
    patterns:
      check_light_status:
        description: Get IR and white light status
        typical_use_cases:
        - check light status
        - get ir status
        - is light on
        time_estimate_ms: '500'
        cost_estimate: '1'
        complexity_score: 0.2
        scope: single_item
        completeness: complete
        policy:
          max_cost: 3
          requires_approval: false
          production_safe: true
          max_execution_time: 10
        preference_match:
          speed: 0.95
          accuracy: 1.0
          cost: 0.95
          complexity: 0.9
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "list"
          group: "Properties.Image.I0.Appearance"
        example_request: "GET http://{host}/axis-cgi/param.cgi?action=list&group=Properties.Image.I0.Appearance"
metadata:
  author: OpsConductor Team
  created: '2025-01-15'
  updated: '2025-01-15'
  tags:
  - axis
  - vapix
  - camera
  - light
  - ir
  - infrared
  - white light
  - illuminator
  documentation_url: https://developer.axis.com/vapix/network-video/light-control/
  api_reference: https://developer.axis.com/vapix/
  notes: |
    Axis VAPIX Light Control API
    
    LIGHT TYPES:
    - IR Light: Infrared illuminator (invisible to human eye)
    - White Light: Visible white light illuminator
    
    IR LIGHT:
    - Used for night vision
    - Requires IR-sensitive camera (IR cut filter off)
    - Produces black & white image
    - Typical range: 10-50 meters
    
    WHITE LIGHT:
    - Produces color image in darkness
    - Visible to humans (deterrent effect)
    - Can be used as warning/deterrent
    - Typical range: 5-30 meters
    
    EXAMPLES:
    
    1. Turn on IR light:
       GET http://192.168.1.100/axis-cgi/param.cgi?action=update
       &ImageSource.I0.DayNight.IrCutFilter=off
       &Properties.Image.I0.Appearance.IRLight.Enabled=yes
    
    2. Set IR intensity to 75%:
       GET http://192.168.1.100/axis-cgi/param.cgi?action=update
       &Properties.Image.I0.Appearance.IRLight.Intensity=75
    
    3. Turn on white light:
       GET http://192.168.1.100/axis-cgi/param.cgi?action=update
       &Properties.Image.I0.Appearance.WhiteLight.Enabled=yes
    
    4. Get light status:
       GET http://192.168.1.100/axis-cgi/param.cgi?action=list
       &group=Properties.Image.I0.Appearance

# === EXAMPLES ===
examples:
  - name: "Turn On Ir"
    description: "Turn on IR illuminator"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
    expected_time_ms: 1000
    expected_cost: 1
  - name: "Turn Off Ir"
    description: "Turn off IR illuminator"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
    expected_time_ms: 1000
    expected_cost: 1
  - name: "Set Ir Intensity"
    description: "Set IR illuminator intensity level"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
      intensity: 100
    expected_time_ms: 1000
    expected_cost: 1
  - name: "Turn On White Light"
    description: "Turn on white light"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
    expected_time_ms: 1000
    expected_cost: 1
  - name: "Turn Off White Light"
    description: "Turn off white light"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
    expected_time_ms: 1000
    expected_cost: 1
  - name: "Check Light Status"
    description: "Get IR and white light status"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
    expected_time_ms: 500
    expected_cost: 1
