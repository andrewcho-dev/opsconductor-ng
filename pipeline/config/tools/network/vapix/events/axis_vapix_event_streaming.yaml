# Axis VAPIX Event Streaming - Stream real-time events via VAPIX API
tool_name: Axis-VAPIX-Event-Streaming
version: '1.0'
description: |
  Stream real-time events from Axis camera via VAPIX HTTP API.
  Supports event subscriptions and filtering.
platform: network
category: network
defaults:
  accuracy_level: real-time
  freshness: live
  data_source: direct
  protocol: http
  path: /axis-cgi/events.cgi
  auth_type: digest
  method: GET
capabilities:
  subscribe_to_events:
    description: Subscribe to real-time event stream
    patterns:
      subscribe_all_events:
        description: Subscribe to all camera events
        typical_use_cases:
        - monitor all events
        - subscribe to events
        - watch camera events
        - real-time event monitoring
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.4
        scope: continuous
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 3600
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.7
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: |
            Axis camera IP address or hostname.
            
            EXAMPLES:
            - "192.168.1.100"
            - "camera-monitor.local"
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with viewer privileges or higher
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "subscribe"
        example_request: "GET http://{host}/axis-cgi/events.cgi?action=subscribe"
      subscribe_motion_events:
        description: Subscribe to motion detection events only
        typical_use_cases:
        - monitor motion events
        - subscribe to motion detection
        - watch for motion
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.4
        scope: continuous
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 3600
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.7
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "subscribe"
          topic: "tns1:VideoSource/MotionAlarm"
        example_request: "GET http://{host}/axis-cgi/events.cgi?action=subscribe&topic=tns1:VideoSource/MotionAlarm"
      subscribe_io_events:
        description: Subscribe to I/O port events
        typical_use_cases:
        - monitor io port events
        - subscribe to input port
        - watch for io triggers
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.4
        scope: continuous
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 3600
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.7
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        - name: port_number
          type: integer
          description: |
            I/O port number to monitor.
            
            VALUE MEANINGS:
            - 1-N: Physical I/O port number
            
            EXAMPLES:
            - 1 - Monitor port 1
            - 2 - Monitor port 2
          validation: ^[1-9][0-9]?$
        api_parameters:
          action: "subscribe"
          topic: "tns1:Device/IO/Port-{port_number}"
        example_request: "GET http://{host}/axis-cgi/events.cgi?action=subscribe&topic=tns1:Device/IO/Port-{port_number}"
  list_event_topics:
    description: List available event topics
    patterns:
      get_available_topics:
        description: Retrieve list of all available event topics
        typical_use_cases:
        - list event topics
        - get available events
        - show event types
        time_estimate_ms: '500'
        cost_estimate: '1'
        complexity_score: 0.2
        scope: single_item
        completeness: complete
        policy:
          max_cost: 3
          requires_approval: false
          production_safe: true
          max_execution_time: 10
        preference_match:
          speed: 0.95
          accuracy: 1.0
          cost: 0.95
          complexity: 0.9
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "list"
        example_request: "GET http://{host}/axis-cgi/events.cgi?action=list"
metadata:
  author: OpsConductor Team
  created: '2025-01-15'
  updated: '2025-01-15'
  tags:
  - axis
  - vapix
  - camera
  - events
  - streaming
  - real-time
  - monitoring
  - subscriptions
  documentation_url: https://developer.axis.com/vapix/network-video/event-data-streaming/
  api_reference: https://developer.axis.com/vapix/
  notes: |
    Axis VAPIX Event Streaming API
    
    EVENT STREAMING:
    - Long-lived HTTP connection
    - Server-sent events format
    - Real-time event notifications
    - Automatic reconnection recommended
    
    COMMON EVENT TOPICS:
    - tns1:VideoSource/MotionAlarm : Motion detection
    - tns1:Device/IO/Port-N : I/O port N events
    - tns1:AudioSource/TriggerLevel : Audio detection
    - tns1:Device/Trigger/Relay : Relay/output events
    - tns1:Monitoring/ProcessorUsage : System load
    - tns1:Device/HardwareFailure : Hardware errors
    
    EVENT FORMAT:
    - XML-based event messages
    - Contains event topic, source, data, and timestamp
    - Stateful events (active/inactive)
    
    SUBSCRIPTION MODES:
    - Subscribe to all events (no topic filter)
    - Subscribe to specific topic
    - Subscribe to topic pattern (wildcards)
    
    RESPONSE FORMAT:
    - HTTP 200 OK with chunked transfer encoding
    - Continuous stream of event messages
    - Connection stays open until closed by client
    
    EXAMPLES:
    
    1. Subscribe to all events:
       GET http://192.168.1.100/axis-cgi/events.cgi?action=subscribe
    
    2. Subscribe to motion detection only:
       GET http://192.168.1.100/axis-cgi/events.cgi?action=subscribe&topic=tns1:VideoSource/MotionAlarm
    
    3. Subscribe to I/O port 1 events:
       GET http://192.168.1.100/axis-cgi/events.cgi?action=subscribe&topic=tns1:Device/IO/Port-1
    
    4. List available event topics:
       GET http://192.168.1.100/axis-cgi/events.cgi?action=list
    
    5. Subscribe with initial state:
       GET http://192.168.1.100/axis-cgi/events.cgi?action=subscribe&initialstate=true
    
    SAMPLE EVENT MESSAGE:
    <tt:MetadataStream>
      <tt:Event>
        <wsnt:NotificationMessage>
          <wsnt:Topic>tns1:VideoSource/MotionAlarm</wsnt:Topic>
          <wsnt:Message>
            <tt:Source>
              <tt:SimpleItem Name="VideoSourceConfigurationToken" Value="1"/>
            </tt:Source>
            <tt:Data>
              <tt:SimpleItem Name="State" Value="1"/>
            </tt:Data>
          </wsnt:Message>
        </wsnt:NotificationMessage>
      </tt:Event>
    </tt:MetadataStream>
    
    BEST PRACTICES:
    - Implement automatic reconnection on connection loss
    - Parse XML event messages properly
    - Filter events on server side when possible
    - Monitor connection health
    - Handle stateful events (track active/inactive states)
    - Use WebSocket API for more efficient streaming (if available)