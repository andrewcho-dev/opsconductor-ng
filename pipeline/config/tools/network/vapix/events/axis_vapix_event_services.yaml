# Axis VAPIX Event Services - Configure event triggers and action rules via VAPIX API
tool_name: Axis-VAPIX-Event-Services
version: '1.0'
description: |
  Configure Axis camera event triggers and action rules via VAPIX API.
  Supports motion detection, I/O triggers, and automated actions.
platform: network
category: network
defaults:
  accuracy_level: real-time
  freshness: live
  data_source: direct
  protocol: http
  path: /axis-cgi/eventconfig.cgi
  auth_type: digest
  method: POST
capabilities:
  create_action_rule:
    description: Create event-triggered action rules
    patterns:
      motion_detection_alert:
        description: Create action rule to trigger on motion detection
        typical_use_cases:
        - alert on motion
        - send notification on motion
        - trigger action on motion detection
        - motion detection event
        time_estimate_ms: '2000'
        cost_estimate: '2'
        complexity_score: 0.5
        scope: single_item
        completeness: complete
        policy:
          max_cost: 10
          requires_approval: false
          production_safe: true
          max_execution_time: 15
        preference_match:
          speed: 0.85
          accuracy: 0.9
          cost: 0.85
          complexity: 0.6
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: |
            Axis camera IP address or hostname.
            
            EXAMPLES:
            - "192.168.1.100"
            - "camera-entrance.local"
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with administrator privileges
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        - name: rule_name
          type: string
          description: |
            Name for the action rule.
            
            VALUE MEANINGS:
            - Unique identifier for the rule
            - Used for managing and identifying rules
            
            EXAMPLES:
            - "motion_alert_entrance"
            - "motion_detection_rule_1"
            - "parking_lot_motion"
          validation: ^[a-zA-Z0-9_-]+$
        - name: action_type
          type: string
          description: |
            Type of action to trigger.
            
            VALUE MEANINGS:
            - "http": Send HTTP request
            - "email": Send email notification
            - "output": Activate output port
            - "record": Start recording
            
            WHEN TO USE:
            - "http" for webhook notifications
            - "email" for email alerts
            - "output" for physical device control
            - "record" for event-based recording
            
            EXAMPLES:
            - "http" - Webhook notification
            - "email" - Email alert
            - "output" - Trigger alarm
          validation: ^(http|email|output|record)$
        - name: action_config
          type: string
          description: |
            Configuration for the action (URL, email address, output port, etc.).
            
            EXAMPLES:
            - "http://server.com/webhook" (for http action)
            - "admin@company.com" (for email action)
            - "1" (for output port action)
          validation: .+
        api_parameters:
          action: "add"
          template: "motion_detection"
          Name: "{rule_name}"
          ActionType: "{action_type}"
          ActionConfig: "{action_config}"
        example_request: "POST http://{host}/axis-cgi/eventconfig.cgi?action=add&template=motion_detection&Name={rule_name}&ActionType={action_type}&ActionConfig={action_config}"
      io_trigger_action:
        description: Create action rule to trigger on I/O port input
        typical_use_cases:
        - trigger on input port
        - io port event
        - external trigger action
        time_estimate_ms: '2000'
        cost_estimate: '2'
        complexity_score: 0.5
        scope: single_item
        completeness: complete
        policy:
          max_cost: 10
          requires_approval: false
          production_safe: true
          max_execution_time: 15
        preference_match:
          speed: 0.85
          accuracy: 0.9
          cost: 0.85
          complexity: 0.6
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with administrator privileges
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        - name: rule_name
          type: string
          description: Name for the action rule
          validation: ^[a-zA-Z0-9_-]+$
        - name: input_port
          type: integer
          description: |
            Input port number to monitor.
            
            VALUE MEANINGS:
            - 1-N: Physical input port number
            - Depends on camera model
            
            EXAMPLES:
            - 1 - Input port 1
            - 2 - Input port 2
          validation: ^[1-9][0-9]?$
        - name: action_type
          type: string
          description: Type of action to trigger (http, email, output, record)
          validation: ^(http|email|output|record)$
        - name: action_config
          type: string
          description: Configuration for the action
          validation: .+
        api_parameters:
          action: "add"
          template: "io_port"
          Name: "{rule_name}"
          InputPort: "{input_port}"
          ActionType: "{action_type}"
          ActionConfig: "{action_config}"
        example_request: "POST http://{host}/axis-cgi/eventconfig.cgi?action=add&template=io_port&Name={rule_name}&InputPort={input_port}&ActionType={action_type}&ActionConfig={action_config}"
  list_action_rules:
    description: List all configured action rules
    patterns:
      get_all_rules:
        description: Retrieve list of all action rules
        typical_use_cases:
        - list action rules
        - get event rules
        - show configured events
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.2
        scope: single_item
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: false
          production_safe: true
          max_execution_time: 10
        preference_match:
          speed: 0.95
          accuracy: 1.0
          cost: 0.95
          complexity: 0.9
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        api_parameters:
          action: "list"
        example_request: "GET http://{host}/axis-cgi/eventconfig.cgi?action=list"
  delete_action_rule:
    description: Delete an action rule
    patterns:
      remove_rule:
        description: Remove an action rule by name
        typical_use_cases:
        - delete action rule
        - remove event rule
        - disable event trigger
        time_estimate_ms: '1000'
        cost_estimate: '1'
        complexity_score: 0.3
        scope: single_item
        completeness: complete
        policy:
          max_cost: 5
          requires_approval: true
          production_safe: false
          max_execution_time: 10
        preference_match:
          speed: 0.9
          accuracy: 0.95
          cost: 0.9
          complexity: 0.8
          completeness: 1.0
        required_inputs:
        - name: host
          type: string
          description: Axis camera IP address or hostname
          validation: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$|^[a-zA-Z0-9.-]+$
        - name: username
          type: string
          description: Camera API username with administrator privileges
          validation: .+
        - name: password
          type: string
          description: Camera API password
          validation: .+
        - name: rule_name
          type: string
          description: Name of the action rule to delete
          validation: ^[a-zA-Z0-9_-]+$
        api_parameters:
          action: "remove"
          Name: "{rule_name}"
        example_request: "POST http://{host}/axis-cgi/eventconfig.cgi?action=remove&Name={rule_name}"
metadata:
  author: OpsConductor Team
  created: '2025-01-15'
  updated: '2025-01-15'
  tags:
  - axis
  - vapix
  - camera
  - events
  - actions
  - triggers
  - motion detection
  - automation
  documentation_url: https://developer.axis.com/vapix/network-video/event-and-action-services/
  api_reference: https://developer.axis.com/vapix/
  notes: |
    Axis VAPIX Event and Action Services API
    
    EVENT TYPES:
    - Motion detection
    - I/O port triggers
    - Audio detection
    - Temperature alarms
    - Tampering detection
    - System events
    
    ACTION TYPES:
    - HTTP: Send HTTP request to external server
    - Email: Send email notification
    - Output: Activate output port (relay, alarm)
    - Record: Start video recording
    - Upload: Upload image/video to FTP/SFTP
    
    ACTION RULE STRUCTURE:
    - Name: Unique identifier
    - Trigger: Event that activates the rule
    - Condition: Optional conditions (time, schedule)
    - Action: What to do when triggered
    
    EXAMPLES:
    
    1. Motion detection → HTTP webhook:
       POST http://192.168.1.100/axis-cgi/eventconfig.cgi
       action=add&template=motion_detection&Name=motion_webhook
       &ActionType=http&ActionConfig=http://server.com/webhook
    
    2. I/O port 1 → Email alert:
       POST http://192.168.1.100/axis-cgi/eventconfig.cgi
       action=add&template=io_port&Name=door_alert&InputPort=1
       &ActionType=email&ActionConfig=admin@company.com
    
    3. Motion detection → Start recording:
       POST http://192.168.1.100/axis-cgi/eventconfig.cgi
       action=add&template=motion_detection&Name=motion_record
       &ActionType=record&ActionConfig=continuous
    
    4. List all action rules:
       GET http://192.168.1.100/axis-cgi/eventconfig.cgi?action=list
    
    5. Delete action rule:
       POST http://192.168.1.100/axis-cgi/eventconfig.cgi
       action=remove&Name=motion_webhook
    
    BEST PRACTICES:
    - Use descriptive rule names
    - Test action rules before deploying
    - Consider using schedules to limit when rules are active
    - Monitor action rule execution for errors
    - Use HTTPS for webhook URLs when possible

# === EXAMPLES ===
examples:
  - name: "Motion Detection Alert"
    description: "Create action rule to trigger on motion detection"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
      rule_name: "example_name"
      action_type: "example_action_type"
      action_config: "example_action_config"
    expected_time_ms: 2000
    expected_cost: 2
  - name: "Io Trigger Action"
    description: "Create action rule to trigger on I/O port input"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
      rule_name: "example_name"
      input_port: 100
      action_type: "example_action_type"
      action_config: "example_action_config"
    expected_time_ms: 2000
    expected_cost: 2
  - name: "Get All Rules"
    description: "Retrieve list of all action rules"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
    expected_time_ms: 1000
    expected_cost: 1
  - name: "Remove Rule"
    description: "Remove an action rule by name"
    inputs:
      host: "192.168.1.100"
      username: "admin"
      password: "secure_password"
      rule_name: "example_name"
    expected_time_ms: 1000
    expected_cost: 1
