version: '3.8'

services:
  # PostgreSQL for Prefect
  prefect-db:
    image: postgres:15
    environment:
      POSTGRES_USER: prefect
      POSTGRES_PASSWORD: prefect
      POSTGRES_DB: prefect
    volumes:
      - prefect_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prefect"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - opsconductor-network

  # Prefect Server
  prefect-server:
    image: prefecthq/prefect:3-latest
    command: prefect server start --host 0.0.0.0
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:prefect@prefect-db:5432/prefect
      PREFECT_SERVER_API_HOST: 0.0.0.0
      PREFECT_API_URL: http://prefect-server:4200/api
    ports:
      - "4200:4200"
    depends_on:
      prefect-db:
        condition: service_healthy
    volumes:
      - prefect_data:/opt/prefect
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - opsconductor-network

  # Prefect Worker
  prefect-worker:
    image: prefecthq/prefect:3-latest
    command: prefect worker start --pool default-agent-pool
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
    depends_on:
      prefect-server:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - prefect_flows:/opt/prefect/flows
    networks:
      - opsconductor-network

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - opsconductor-network

  # Modern AI Brain Service
  ai-brain-modern:
    build:
      context: ./ai-brain
      dockerfile: Dockerfile.modern
    ports:
      - "3005:3005"
    environment:
      OLLAMA_HOST: http://ollama:11434
      DEFAULT_MODEL: codellama:7b
      PREFECT_API_URL: http://prefect-server:4200/api
      ASSET_SERVICE_URL: http://asset-service:3002
      AUTOMATION_SERVICE_URL: http://automation-service:3003
      NETWORK_ANALYZER_URL: http://network-analyzer-service:3006
    depends_on:
      prefect-server:
        condition: service_healthy
      ollama:
        condition: service_healthy
    volumes:
      - ./ai-brain:/app
      - ./shared:/app/shared
    networks:
      - opsconductor-network

  # Asset Service (existing)
  asset-service:
    build:
      context: ./asset-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/opsconductor
    depends_on:
      - postgres
    networks:
      - opsconductor-network

  # Automation Service (existing)
  automation-service:
    build:
      context: ./automation-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/opsconductor
    depends_on:
      - postgres
    networks:
      - opsconductor-network

  # Network Analyzer Service (existing)
  network-analyzer-service:
    build:
      context: ./network-analyzer-service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/opsconductor
    depends_on:
      - postgres
    networks:
      - opsconductor-network

  # PostgreSQL (existing)
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: opsconductor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - opsconductor-network

  # Redis (for caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - opsconductor-network

volumes:
  prefect_db_data:
  prefect_data:
  prefect_flows:
  ollama_data:
  postgres_data:
  redis_data:

networks:
  opsconductor-network:
    driver: bridge